<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20231.23.0310.1044                               -->
<workbook original-version='18.1' source-build='2023.1.0 (20231.23.0310.1044)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AccessibleZoneTabOrder.true...AccessibleZoneTabOrder />
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <BasicButtonObject />
    <IntuitiveSorting />
    <IntuitiveSorting_SP2 />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.ParameterDefaultValues.true...ParameterDefaultValues />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
    <WorksheetBackgroundTransparency />
    <ZoneBackgroundTransparency />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource hasconnection='false' inline='true' name='Parameters' version='18.1'>
      <aliases enabled='yes' />
      <column _.fcp.ParameterDefaultValues.true...source-field='[federated.0gyrh5s04co3pi1avdh6e0jx2uig].[City]' caption='City Parameter' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Cape Town&quot;'>
        <calculation class='tableau' formula='&quot;Cape Town&quot;' />
      </column>
      <column caption='Date Parameter ' datatype='string' name='[Parameter 2]' param-domain-type='list' role='measure' type='nominal' value='&quot;month&quot;'>
        <calculation class='tableau' formula='&quot;month&quot;' />
        <members>
          <member value='&quot;year&quot;' />
          <member value='&quot;quarter&quot;' />
          <member value='&quot;month&quot;' />
        </members>
      </column>
    </datasource>
    <datasource caption='Main+ (Zomata)' inline='true' name='federated.0gyrh5s04co3pi1avdh6e0jx2uig' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Zomata' name='excel-direct.1ilae7q0wk0bg3106wq2h1ol5t7s'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/Hello/Downloads/Zomata.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.1ilae7q0wk0bg3106wq2h1ol5t7s' name='Country' table='[Country$]' type='table'>
          <columns gridOrigin='A1:B16:no:A1:B16:0' header='yes' outcome='6'>
            <column datatype='integer' name='CountryID' ordinal='0' />
            <column datatype='string' name='Countryname' ordinal='1' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation type='collection'>
          <relation connection='excel-direct.1ilae7q0wk0bg3106wq2h1ol5t7s' name='Main' table='[Main$]' type='table'>
            <columns gridOrigin='A1:T9552:no:A1:T9552:0' header='yes' outcome='6'>
              <column datatype='integer' name='RestaurantID' ordinal='0' />
              <column datatype='string' name='RestaurantName' ordinal='1' />
              <column datatype='integer' name='CountryCode' ordinal='2' />
              <column datatype='string' name='City' ordinal='3' />
              <column datatype='string' name='Address' ordinal='4' />
              <column datatype='string' name='Locality' ordinal='5' />
              <column datatype='string' name='LocalityVerbose' ordinal='6' />
              <column datatype='real' name='Longitude' ordinal='7' />
              <column datatype='real' name='Latitude' ordinal='8' />
              <column datatype='string' name='Cuisines' ordinal='9' />
              <column datatype='string' name='Currency' ordinal='10' />
              <column datatype='string' name='Has_Table_booking' ordinal='11' />
              <column datatype='string' name='Has_Online_delivery' ordinal='12' />
              <column datatype='string' name='Is_delivering_now' ordinal='13' />
              <column datatype='string' name='Switch_to_order_menu' ordinal='14' />
              <column datatype='integer' name='Price_range' ordinal='15' />
              <column datatype='integer' name='Votes' ordinal='16' />
              <column datatype='integer' name='Average_Cost_for_two' ordinal='17' />
              <column datatype='real' name='Rating' ordinal='18' />
              <column datatype='datetime' date-parse-format='yyyy_MM_dd' name='Datekey_Opening' ordinal='19' />
            </columns>
          </relation>
          <relation connection='excel-direct.1ilae7q0wk0bg3106wq2h1ol5t7s' name='Country' table='[Country$]' type='table'>
            <columns gridOrigin='A1:B16:no:A1:B16:0' header='yes' outcome='6'>
              <column datatype='integer' name='CountryID' ordinal='0' />
              <column datatype='string' name='Countryname' ordinal='1' />
            </columns>
          </relation>
          <relation connection='excel-direct.1ilae7q0wk0bg3106wq2h1ol5t7s' name='Currency' table='[Currency$]' type='table'>
            <columns gridOrigin='A1:B13:no:A1:B13:0' header='yes' outcome='6'>
              <column datatype='string' name='Currency' ordinal='0' />
              <column datatype='real' name='USD Rate' ordinal='1' />
            </columns>
          </relation>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <cols>
          <map key='[Address]' value='[Main].[Address]' />
          <map key='[Average_Cost_for_two]' value='[Main].[Average_Cost_for_two]' />
          <map key='[City]' value='[Main].[City]' />
          <map key='[CountryCode]' value='[Main].[CountryCode]' />
          <map key='[CountryID]' value='[Country].[CountryID]' />
          <map key='[Countryname]' value='[Country].[Countryname]' />
          <map key='[Cuisines]' value='[Main].[Cuisines]' />
          <map key='[Currency (Currency)]' value='[Currency].[Currency]' />
          <map key='[Currency]' value='[Main].[Currency]' />
          <map key='[Datekey_Opening]' value='[Main].[Datekey_Opening]' />
          <map key='[Has_Online_delivery]' value='[Main].[Has_Online_delivery]' />
          <map key='[Has_Table_booking]' value='[Main].[Has_Table_booking]' />
          <map key='[Is_delivering_now]' value='[Main].[Is_delivering_now]' />
          <map key='[Latitude]' value='[Main].[Latitude]' />
          <map key='[LocalityVerbose]' value='[Main].[LocalityVerbose]' />
          <map key='[Locality]' value='[Main].[Locality]' />
          <map key='[Longitude]' value='[Main].[Longitude]' />
          <map key='[Price_range]' value='[Main].[Price_range]' />
          <map key='[Rating]' value='[Main].[Rating]' />
          <map key='[RestaurantID]' value='[Main].[RestaurantID]' />
          <map key='[RestaurantName]' value='[Main].[RestaurantName]' />
          <map key='[Switch_to_order_menu]' value='[Main].[Switch_to_order_menu]' />
          <map key='[USD Rate]' value='[Currency].[USD Rate]' />
          <map key='[Votes]' value='[Main].[Votes]' />
        </cols>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Main]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:T9552:no:A1:T9552:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Country]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:B16:no:A1:B16:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Currency]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:B13:no:A1:B13:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>RestaurantID</remote-name>
            <remote-type>20</remote-type>
            <local-name>[RestaurantID]</local-name>
            <parent-name>[Main]</parent-name>
            <remote-alias>RestaurantID</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Main_C562EB1EF78848B78126FD66CCC15CBE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>RestaurantName</remote-name>
            <remote-type>130</remote-type>
            <local-name>[RestaurantName]</local-name>
            <parent-name>[Main]</parent-name>
            <remote-alias>RestaurantName</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Main_C562EB1EF78848B78126FD66CCC15CBE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>CountryCode</remote-name>
            <remote-type>20</remote-type>
            <local-name>[CountryCode]</local-name>
            <parent-name>[Main]</parent-name>
            <remote-alias>CountryCode</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Main_C562EB1EF78848B78126FD66CCC15CBE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>City</remote-name>
            <remote-type>130</remote-type>
            <local-name>[City]</local-name>
            <parent-name>[Main]</parent-name>
            <remote-alias>City</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Main_C562EB1EF78848B78126FD66CCC15CBE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Address</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Address]</local-name>
            <parent-name>[Main]</parent-name>
            <remote-alias>Address</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Main_C562EB1EF78848B78126FD66CCC15CBE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Locality</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Locality]</local-name>
            <parent-name>[Main]</parent-name>
            <remote-alias>Locality</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Main_C562EB1EF78848B78126FD66CCC15CBE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>LocalityVerbose</remote-name>
            <remote-type>130</remote-type>
            <local-name>[LocalityVerbose]</local-name>
            <parent-name>[Main]</parent-name>
            <remote-alias>LocalityVerbose</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Main_C562EB1EF78848B78126FD66CCC15CBE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Longitude</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Longitude]</local-name>
            <parent-name>[Main]</parent-name>
            <remote-alias>Longitude</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Main_C562EB1EF78848B78126FD66CCC15CBE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Latitude</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Latitude]</local-name>
            <parent-name>[Main]</parent-name>
            <remote-alias>Latitude</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Main_C562EB1EF78848B78126FD66CCC15CBE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Cuisines</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Cuisines]</local-name>
            <parent-name>[Main]</parent-name>
            <remote-alias>Cuisines</remote-alias>
            <ordinal>9</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Main_C562EB1EF78848B78126FD66CCC15CBE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Currency</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Currency]</local-name>
            <parent-name>[Main]</parent-name>
            <remote-alias>Currency</remote-alias>
            <ordinal>10</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Main_C562EB1EF78848B78126FD66CCC15CBE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Has_Table_booking</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Has_Table_booking]</local-name>
            <parent-name>[Main]</parent-name>
            <remote-alias>Has_Table_booking</remote-alias>
            <ordinal>11</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Main_C562EB1EF78848B78126FD66CCC15CBE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Has_Online_delivery</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Has_Online_delivery]</local-name>
            <parent-name>[Main]</parent-name>
            <remote-alias>Has_Online_delivery</remote-alias>
            <ordinal>12</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Main_C562EB1EF78848B78126FD66CCC15CBE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Is_delivering_now</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Is_delivering_now]</local-name>
            <parent-name>[Main]</parent-name>
            <remote-alias>Is_delivering_now</remote-alias>
            <ordinal>13</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Main_C562EB1EF78848B78126FD66CCC15CBE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Switch_to_order_menu</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Switch_to_order_menu]</local-name>
            <parent-name>[Main]</parent-name>
            <remote-alias>Switch_to_order_menu</remote-alias>
            <ordinal>14</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Main_C562EB1EF78848B78126FD66CCC15CBE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Price_range</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Price_range]</local-name>
            <parent-name>[Main]</parent-name>
            <remote-alias>Price_range</remote-alias>
            <ordinal>15</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Main_C562EB1EF78848B78126FD66CCC15CBE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Votes</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Votes]</local-name>
            <parent-name>[Main]</parent-name>
            <remote-alias>Votes</remote-alias>
            <ordinal>16</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Main_C562EB1EF78848B78126FD66CCC15CBE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Average_Cost_for_two</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Average_Cost_for_two]</local-name>
            <parent-name>[Main]</parent-name>
            <remote-alias>Average_Cost_for_two</remote-alias>
            <ordinal>17</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Main_C562EB1EF78848B78126FD66CCC15CBE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Rating</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Rating]</local-name>
            <parent-name>[Main]</parent-name>
            <remote-alias>Rating</remote-alias>
            <ordinal>18</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Main_C562EB1EF78848B78126FD66CCC15CBE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Datekey_Opening</remote-name>
            <remote-type>7</remote-type>
            <local-name>[Datekey_Opening]</local-name>
            <parent-name>[Main]</parent-name>
            <remote-alias>Datekey_Opening</remote-alias>
            <ordinal>19</ordinal>
            <local-type>datetime</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Main_C562EB1EF78848B78126FD66CCC15CBE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>CountryID</remote-name>
            <remote-type>20</remote-type>
            <local-name>[CountryID]</local-name>
            <parent-name>[Country]</parent-name>
            <remote-alias>CountryID</remote-alias>
            <ordinal>20</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Country_22AE1ADBF0DD4ED3896676C8D9F9FAFB]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Countryname</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Countryname]</local-name>
            <parent-name>[Country]</parent-name>
            <remote-alias>Countryname</remote-alias>
            <ordinal>21</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Country_22AE1ADBF0DD4ED3896676C8D9F9FAFB]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Currency</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Currency (Currency)]</local-name>
            <parent-name>[Currency]</parent-name>
            <remote-alias>Currency</remote-alias>
            <ordinal>22</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Currency_462DD86E959D4E53A091BE7F8B67C221]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>USD Rate</remote-name>
            <remote-type>5</remote-type>
            <local-name>[USD Rate]</local-name>
            <parent-name>[Currency]</parent-name>
            <remote-alias>USD Rate</remote-alias>
            <ordinal>23</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Currency_462DD86E959D4E53A091BE7F8B67C221]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Average Cost for two' datatype='integer' name='[Average_Cost_for_two]' role='measure' type='quantitative' />
      <column caption='Contains city' datatype='boolean' name='[Calculation_164944388466343937]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='CONTAINS([City],[Parameters].[Parameter 1])' />
      </column>
      <column caption='Country1' datatype='string' name='[Calculation_164944388468121603]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='IF[CountryCode]=1 then &quot;India&quot;&#13;&#10;ELSEIF [CountryCode]=216 then &quot;United States&quot;&#13;&#10;ELSEIF [CountryCode]=215 then &quot;Scotland&quot; &#13;&#10;ELSEIF [CountryCode]=184 then &quot;Singapore&quot;&#13;&#10;ELSEIF [CountryCode]=37 then &quot;Ontario&quot;&#13;&#10;ELSEIF [CountryCode]=148 then &quot;New Zealand&quot;&#13;&#10;ELSEIF [CountryCode]=214 then &quot;United Arab Emirates&quot;&#13;&#10;ELSEIF [CountryCode]=30 then &quot;Brazil&quot;&#13;&#10;ELSEIF [CountryCode]=14 then &quot;Liberia&quot;&#13;&#10;ELSEIF [CountryCode]=208 then &quot;Turkey&quot;&#13;&#10;ELSEIF [CountryCode]=166 then &quot;Qatar&quot;&#13;&#10;ELSEIF [CountryCode]=189 then &quot;south Africa&quot;&#13;&#10;ELSEIF [CountryCode]=162 then &quot;Philippines&quot;&#13;&#10;ELSEIF [CountryCode]=191 then &quot;Sri Lanka&quot;&#13;&#10;ELSE &quot;Indonesia&quot;&#13;&#10;END' />
      </column>
      <column caption='order_year' datatype='string' name='[Calculation_164944388474650630]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='STR(YEAR([Datekey_Opening]))' />
      </column>
      <column caption='Month no' datatype='integer' name='[Calculation_164944388474908679]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='MONTH([Datekey_Opening])' />
      </column>
      <column caption='Month name' datatype='string' name='[Calculation_164944388475953160]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='DATENAME(&apos;month&apos;,[Datekey_Opening])' />
      </column>
      <column caption='Quarter' datatype='string' name='[Calculation_164944388542275593]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='&quot;Q&quot; + DATENAME(&apos;quarter&apos;,[Datekey_Opening])' />
      </column>
      <column caption='Weekday no' datatype='integer' name='[Calculation_164944388542541834]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='DATEPART(&apos;weekday&apos;,[Datekey_Opening])' />
      </column>
      <column caption='Weekday name' datatype='string' name='[Calculation_164944388542816267]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='DATENAME(&apos;weekday&apos;,[Datekey_Opening])' />
      </column>
      <column caption='Month_Year' datatype='string' name='[Calculation_164944388543401996]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='STR(YEAR([Datekey_Opening])) + &quot;/&quot; + STR(MONTH([Datekey_Opening]))' />
      </column>
      <column caption='Financial Month' datatype='integer' name='[Calculation_164944388543889421]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF  MONTH([Datekey_Opening]) - 3 &gt; 0&#13;&#10;THEN MONTH([Datekey_Opening]) - 3&#13;&#10;ELSE MONTH([Datekey_Opening]) + 12 - 3&#13;&#10;END' />
      </column>
      <column caption='Financial Quarter' datatype='integer' name='[Calculation_164944388544102414]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='DATEPART(&apos;quarter&apos;,DATEADD(&apos;month&apos;,-3,[Datekey_Opening]))' />
      </column>
      <column caption='order_quarter' datatype='string' name='[Calculation_164944388544782351]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='STR(YEAR([Datekey_Opening])) + &quot;Q&quot; + DATENAME(&apos;quarter&apos;,[Datekey_Opening])' />
      </column>
      <column caption='order_month' datatype='string' name='[Calculation_164944388544954384]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='STR(YEAR([Datekey_Opening])) + &quot;/&quot; + STR(MONTH([Datekey_Opening]))' />
      </column>
      <column caption='Date' datatype='string' name='[Calculation_164944388545413137]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='CASE [Parameters].[Parameter 2]&#13;&#10;WHEN &apos;month&apos; THEN [Calculation_164944388544954384]&#13;&#10;WHEN &apos;year&apos; THEN [Calculation_164944388474650630]&#13;&#10;WHEN &apos;quarter&apos; THEN [Calculation_164944388544782351]&#13;&#10;END' />
      </column>
      <column aggregation='Sum' caption='Rating 1' datatype='real' name='[Calculation_164944388608503827]' role='dimension' type='ordinal'>
        <calculation class='tableau' formula='[Rating]' />
      </column>
      <column caption='Bucket list' datatype='string' name='[Calculation_164944388609568788]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='IF [Average_Cost_for_two]&lt;=1000  then       &#13;&#10;&quot;0-1000&quot;&#13;&#10;ELSEIF [Average_Cost_for_two]&lt;=10000  then&#13;&#10;&quot;1001-10000&quot;&#13;&#10;ELSEIF [Average_Cost_for_two]&lt;=100000  then&#13;&#10;&quot;10001-100000&quot;&#13;&#10;ELSEIF [Average_Cost_for_two]&lt;=1000000  then&#13;&#10;&quot;100001-1000000&quot;&#13;&#10;END' />
      </column>
      <column datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
      <column caption='Country Code' datatype='integer' name='[CountryCode]' role='dimension' type='ordinal' />
      <column caption='Country ID' datatype='integer' name='[CountryID]' role='dimension' type='ordinal' />
      <column datatype='string' name='[Countryname]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column datatype='string' name='[Cuisines]' role='dimension' type='nominal' />
      <column caption='Datekey Opening' datatype='datetime' name='[Datekey_Opening]' role='dimension' type='ordinal' />
      <column caption='Has Online delivery' datatype='string' name='[Has_Online_delivery]' role='dimension' type='nominal' />
      <column caption='Has Table booking' datatype='string' name='[Has_Table_booking]' role='dimension' type='nominal' />
      <column caption='Is delivering now' datatype='string' name='[Is_delivering_now]' role='dimension' type='nominal' />
      <column aggregation='Avg' datatype='real' name='[Latitude]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
      <column caption='Locality Verbose' datatype='string' name='[LocalityVerbose]' role='dimension' type='nominal' />
      <column aggregation='Avg' datatype='real' name='[Longitude]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
      <column caption='Price range' datatype='integer' name='[Price_range]' role='measure' type='quantitative' />
      <column caption='Restaurant ID' datatype='integer' name='[RestaurantID]' role='dimension' type='ordinal' />
      <column caption='Restaurant Name' datatype='string' name='[RestaurantName]' role='dimension' type='nominal' />
      <column caption='Switch to order menu' datatype='string' name='[Switch_to_order_menu]' role='dimension' type='nominal' />
      <_.fcp.ObjectModelTableType.true...column caption='Country' datatype='table' name='[__tableau_internal_object_id__].[Country_22AE1ADBF0DD4ED3896676C8D9F9FAFB]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='Currency1' datatype='table' name='[__tableau_internal_object_id__].[Currency_462DD86E959D4E53A091BE7F8B67C221]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='Main' datatype='table' name='[__tableau_internal_object_id__].[Main_C562EB1EF78848B78126FD66CCC15CBE]' role='measure' type='quantitative' />
      <column-instance column='[City]' derivation='Attribute' name='[attr:City:nk]' pivot='key' type='nominal' />
      <column-instance column='[Calculation_164944388468121603]' derivation='None' name='[none:Calculation_164944388468121603:nk]' pivot='key' type='nominal' />
      <column-instance column='[Calculation_164944388545413137]' derivation='None' name='[none:Calculation_164944388545413137:nk]' pivot='key' type='nominal' />
      <column-instance column='[City]' derivation='None' name='[none:City:nk]' pivot='key' type='nominal' />
      <column-instance column='[Has_Online_delivery]' derivation='None' name='[none:Has_Online_delivery:nk]' pivot='key' type='nominal' />
      <column-instance column='[Has_Table_booking]' derivation='None' name='[none:Has_Table_booking:nk]' pivot='key' type='nominal' />
      <column-instance column='[Is_delivering_now]' derivation='None' name='[none:Is_delivering_now:nk]' pivot='key' type='nominal' />
      <group caption='Action (Cuisines)' hidden='true' name='[Action (Cuisines)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Cuisines]' />
        </groupfilter>
      </group>
      <group caption='Action (Date)' hidden='true' name='[Action (Date)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Calculation_164944388545413137]' />
        </groupfilter>
      </group>
      <group caption='Action (Has Online delivery)' hidden='true' name='[Action (Has Online delivery)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Has_Online_delivery]' />
        </groupfilter>
      </group>
      <drill-paths>
        <drill-path name='Countryname, City' />
      </drill-paths>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:City:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Athens&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Cochrane&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Ghaziabad&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Lorn&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;New Delhi&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Ranchi&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;ÛÁstanbul&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Abu Dhabi&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Boise&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Dubuque&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Johannesburg&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Miller&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Phillip Island&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Sioux City&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Yorkton&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Allahabad&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Chandigarh&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Fernley&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Lakes Entrance&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Mumbai&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Princeton&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Tampa Bay&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Balingup&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Consort&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Hepburn Springs&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Macon&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Palm Cove&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;San Juan City&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Vernonia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Auckland&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Coimbatore&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Goa&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Lucknow&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Noida&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Randburg&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Vadodara&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Amritsar&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Chatham-Kent&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Flaxton&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Lakeview&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Mysore&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Puducherry&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Tangerang&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Birmingham&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Doha&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Jaipur&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Mc Millan&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Penola&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Sí£o Paulo&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Wellington City&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Agra&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Brasí_lia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;East Ballina&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Kanpur&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Mohali&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Pocatello&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Surat&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Bhopal&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Des Moines&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Inner City&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Mangalore&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Patna&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Secunderabad&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Waterloo&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Ankara&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Chennai&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Forrest&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Lincoln&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Nagpur&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Pune&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Tanunda&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Bandung&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Dalton&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Huskisson&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Makati City&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Panchkula&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Sandton&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Victor Harbor&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Bangalore&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Davenport&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Hyderabad&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Manchester&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Pasay City&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Santa Rosa&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Vineland Station&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Bhubaneshwar&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Dicky Beach&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Inverloch&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Mayfield&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Paynesville&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Sharjah&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Weirton&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Bogor&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Dubai&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Jakarta&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Middleton Beach&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Pensacola&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Singapore&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Winchester Bay&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Augusta&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Colombo&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Gurgaon&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Ludhiana&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Ojo Caliente&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Rest of Hawaii&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Valdosta&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Armidale&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Clatskanie&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Gainesville&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;London&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Nashik&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Quezon City&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Trentham East&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Ahmedabad&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Cape Town&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Edinburgh&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Kochi&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Monroe&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Potrero&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Tagaytay City&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Beechworth&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Dehradun&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Indore&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Mandaluyong City&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Pasig City&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Savannah&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Vizag&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Aurangabad&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Columbus&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Guwahati&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Macedon&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Orlando&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Rio de Janeiro&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Varanasi&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Albany&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Cedar Rapids/Iowa City&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Faridabad&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Kolkata&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Montville&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Pretoria&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Taguig City&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[attr:City:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Athens&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Cochrane&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Ghaziabad&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Lorn&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;New Delhi&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Ranchi&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;ÛÁstanbul&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Abu Dhabi&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Boise&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Dubuque&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Johannesburg&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Miller&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Phillip Island&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Sioux City&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Yorkton&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Allahabad&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Chandigarh&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Fernley&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Lakes Entrance&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Mumbai&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Princeton&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Tampa Bay&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Balingup&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Consort&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Hepburn Springs&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Macon&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Palm Cove&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;San Juan City&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Vernonia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Auckland&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Coimbatore&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Goa&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Lucknow&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Noida&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Randburg&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Vadodara&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Amritsar&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Chatham-Kent&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Flaxton&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Lakeview&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Mysore&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Puducherry&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Tangerang&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Birmingham&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Doha&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Jaipur&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Mc Millan&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Penola&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Sí£o Paulo&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Wellington City&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Agra&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Brasí_lia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;East Ballina&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Kanpur&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Mohali&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Pocatello&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Surat&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Bhopal&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Des Moines&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Inner City&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Mangalore&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Patna&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Secunderabad&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Waterloo&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Ankara&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Chennai&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Forrest&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Lincoln&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Nagpur&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Pune&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Tanunda&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Bandung&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Dalton&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Huskisson&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Makati City&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Panchkula&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Sandton&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Victor Harbor&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Bangalore&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Davenport&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Hyderabad&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Manchester&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Pasay City&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Santa Rosa&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Vineland Station&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Bhubaneshwar&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Dicky Beach&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Inverloch&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Mayfield&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Paynesville&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Sharjah&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Weirton&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Bogor&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Dubai&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Jakarta&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Middleton Beach&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Pensacola&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Singapore&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Winchester Bay&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Augusta&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Colombo&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Gurgaon&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Ludhiana&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Ojo Caliente&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Rest of Hawaii&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Valdosta&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Armidale&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Clatskanie&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Gainesville&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;London&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Nashik&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Quezon City&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Trentham East&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Ahmedabad&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Cape Town&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Edinburgh&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Kochi&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Monroe&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Potrero&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Tagaytay City&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Beechworth&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Dehradun&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Indore&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Mandaluyong City&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Pasig City&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Savannah&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Vizag&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Aurangabad&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Columbus&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Guwahati&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Macedon&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Orlando&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Rio de Janeiro&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Varanasi&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Albany&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Cedar Rapids/Iowa City&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Faridabad&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Kolkata&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Montville&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Pretoria&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Taguig City&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Has_Table_booking:nk]' type='palette'>
            <map to='#d3293d'>
              <bucket>&quot;Yes&quot;</bucket>
            </map>
            <map to='#ffbeb2'>
              <bucket>&quot;No&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Has_Online_delivery:nk]' type='palette'>
            <map to='#d3293d'>
              <bucket>&quot;Yes&quot;</bucket>
            </map>
            <map to='#ffbeb2'>
              <bucket>&quot;No&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Calculation_164944388545413137:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;2010/9&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;2012/5&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;2012Q1&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;2014/1&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;2015/9&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;2017/5&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;2017Q1&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;2010&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;2010/1&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;2010Q1&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;2011/9&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;2013/5&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;2015/1&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;2015Q1&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;2016/9&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;2018/5&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;2010/5&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;2011Q1&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;2012/1&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;2013/9&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;2014&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;2015/5&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;2016Q1&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;2017/1&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;2018/9&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;2013&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;2011/1&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;2012/9&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;2013Q1&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;2014/5&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;2016/1&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;2017/9&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;2018Q1&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;2010/10&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;2012/6&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;2012Q2&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;2014/2&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;2015/10&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;2017/6&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;2017Q2&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;2010/6&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;2011Q2&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;2012/2&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;2013/10&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;2015/6&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;2016Q2&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;2017/2&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;2018/10&quot;</bucket>
            </map>
            <map to='#9c755f'>
              <bucket>&quot;2018&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;2011/7&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;2013/3&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;2014/11&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;2014Q3&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;2016/7&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;2018/3&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;2010/2&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;2010Q2&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;2011/10&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;2013/6&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;2015/2&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;2015Q2&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;2016/10&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;2018/6&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;2011/5&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;2013/1&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;2014/9&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;2014Q1&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;2016&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;2016/5&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;2018/1&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;2010/7&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;2011Q3&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;2012/3&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;2013/11&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;2015/7&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;2016Q3&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;2017/3&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;2018/11&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;2011/2&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;2012/10&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;2013Q2&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;2014/6&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;2016/2&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;2017/10&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;2018Q2&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;2011/3&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;2012/11&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;2013Q3&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;2014/7&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;2016/3&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;2017/11&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;2018Q3&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;2011/6&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;2013/2&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;2014/10&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;2014Q2&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;2016/6&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;2018/2&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;2011/8&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;2013/4&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;2014/12&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;2014Q4&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;2016/8&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;2018/4&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;2010/11&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;2012&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;2012/7&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;2012Q3&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;2014/3&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;2015/11&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;2017/7&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;2017Q3&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;2015&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;2010/8&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;2011Q4&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;2012/4&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;2013/12&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;2015/8&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;2016Q4&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;2017/4&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;2018/12&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;2010/3&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;2010Q3&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;2011&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;2011/11&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;2013/7&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;2015/3&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;2015Q3&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;2016/11&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;2018/7&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;2011/4&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;2012/12&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;2013Q4&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;2014/8&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;2016/4&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;2017/12&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;2018Q4&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;2010/12&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;2012/8&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;2012Q4&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;2014/4&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;2015/12&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;2017/8&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;2017Q4&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;2017&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;2010/4&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;2010Q4&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;2011/12&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;2013/8&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;2015/4&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;2015Q4&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;2016/12&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;2018/8&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Calculation_164944388468121603:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Scotland&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Brazil&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;New Zealand&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Turkey&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Singapore&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Ontario&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;India&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Philippines&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;United Arab Emirates&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;United States&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;south Africa&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Qatar&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Indonesia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Sri Lanka&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Liberia&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Is_delivering_now:nk]' type='palette'>
            <map to='#d3293d'>
              <bucket>&quot;Yes&quot;</bucket>
            </map>
            <map to='#ffbeb2'>
              <bucket>&quot;No&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;India&quot;' />
      </semantic-values>
      <datasource-dependencies datasource='Parameters'>
        <column _.fcp.ParameterDefaultValues.true...source-field='[federated.0gyrh5s04co3pi1avdh6e0jx2uig].[City]' caption='City Parameter' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Cape Town&quot;'>
          <calculation class='tableau' formula='&quot;Cape Town&quot;' />
        </column>
        <column caption='Date Parameter ' datatype='string' name='[Parameter 2]' param-domain-type='list' role='measure' type='nominal' value='&quot;month&quot;'>
          <calculation class='tableau' formula='&quot;month&quot;' />
        </column>
      </datasource-dependencies>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Country' id='Country_22AE1ADBF0DD4ED3896676C8D9F9FAFB'>
            <properties context=''>
              <relation connection='excel-direct.1ilae7q0wk0bg3106wq2h1ol5t7s' name='Country' table='[Country$]' type='table'>
                <columns gridOrigin='A1:B16:no:A1:B16:0' header='yes' outcome='6'>
                  <column datatype='integer' name='CountryID' ordinal='0' />
                  <column datatype='string' name='Countryname' ordinal='1' />
                </columns>
              </relation>
            </properties>
          </object>
          <object caption='Currency1' id='Currency_462DD86E959D4E53A091BE7F8B67C221'>
            <properties context=''>
              <relation connection='excel-direct.1ilae7q0wk0bg3106wq2h1ol5t7s' name='Currency' table='[Currency$]' type='table'>
                <columns gridOrigin='A1:B13:no:A1:B13:0' header='yes' outcome='6'>
                  <column datatype='string' name='Currency' ordinal='0' />
                  <column datatype='real' name='USD Rate' ordinal='1' />
                </columns>
              </relation>
            </properties>
          </object>
          <object caption='Main' id='Main_C562EB1EF78848B78126FD66CCC15CBE'>
            <properties context=''>
              <relation connection='excel-direct.1ilae7q0wk0bg3106wq2h1ol5t7s' name='Main' table='[Main$]' type='table'>
                <columns gridOrigin='A1:T9552:no:A1:T9552:0' header='yes' outcome='6'>
                  <column datatype='integer' name='RestaurantID' ordinal='0' />
                  <column datatype='string' name='RestaurantName' ordinal='1' />
                  <column datatype='integer' name='CountryCode' ordinal='2' />
                  <column datatype='string' name='City' ordinal='3' />
                  <column datatype='string' name='Address' ordinal='4' />
                  <column datatype='string' name='Locality' ordinal='5' />
                  <column datatype='string' name='LocalityVerbose' ordinal='6' />
                  <column datatype='real' name='Longitude' ordinal='7' />
                  <column datatype='real' name='Latitude' ordinal='8' />
                  <column datatype='string' name='Cuisines' ordinal='9' />
                  <column datatype='string' name='Currency' ordinal='10' />
                  <column datatype='string' name='Has_Table_booking' ordinal='11' />
                  <column datatype='string' name='Has_Online_delivery' ordinal='12' />
                  <column datatype='string' name='Is_delivering_now' ordinal='13' />
                  <column datatype='string' name='Switch_to_order_menu' ordinal='14' />
                  <column datatype='integer' name='Price_range' ordinal='15' />
                  <column datatype='integer' name='Votes' ordinal='16' />
                  <column datatype='integer' name='Average_Cost_for_two' ordinal='17' />
                  <column datatype='real' name='Rating' ordinal='18' />
                  <column datatype='datetime' date-parse-format='yyyy_MM_dd' name='Datekey_Opening' ordinal='19' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
        <relationships>
          <relationship>
            <expression op='='>
              <expression op='[CountryCode]' />
              <expression op='[CountryID]' />
            </expression>
            <first-end-point object-id='Main_C562EB1EF78848B78126FD66CCC15CBE' />
            <second-end-point object-id='Country_22AE1ADBF0DD4ED3896676C8D9F9FAFB' />
          </relationship>
          <relationship>
            <expression op='='>
              <expression op='[Currency]' />
              <expression op='[Currency (Currency)]' />
            </expression>
            <first-end-point object-id='Main_C562EB1EF78848B78126FD66CCC15CBE' />
            <second-end-point object-id='Currency_462DD86E959D4E53A091BE7F8B67C221' />
          </relationship>
        </relationships>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <actions>
    <action caption='Filter 1 (generated)' name='[Action1_ADEFE3FF173941E183044D89AEB67CBD]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard 1' type='sheet' worksheet='Q 4' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard 1' />
      </command>
    </action>
    <action caption='Filter 2 (generated)' name='[Action2_574007DB46DE4718A30F1029A1614ACA]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard 1' type='sheet' worksheet='Q 8' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard 1' />
      </command>
    </action>
    <action caption='Filter 3 (generated)' name='[Action3_30A0FE73CE9E4DBA94A064B451665353]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard 2' type='sheet' worksheet='Sheet 16' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard 2' />
      </command>
    </action>
  </actions>
  <worksheets>
    <worksheet name='Count of restaurants each country'>
      <table>
        <view>
          <datasources>
            <datasource caption='Main+ (Zomata)' name='federated.0gyrh5s04co3pi1avdh6e0jx2uig' />
          </datasources>
          <datasource-dependencies datasource='federated.0gyrh5s04co3pi1avdh6e0jx2uig'>
            <_.fcp.ObjectModelTableType.false...column caption='Country' datatype='integer' name='[__tableau_internal_object_id__].[Country_22AE1ADBF0DD4ED3896676C8D9F9FAFB]' role='measure' type='quantitative' />
            <column caption='Restaurant Name' datatype='string' name='[RestaurantName]' role='dimension' type='nominal' />
            <_.fcp.ObjectModelTableType.true...column caption='Country' datatype='table' name='[__tableau_internal_object_id__].[Country_22AE1ADBF0DD4ED3896676C8D9F9FAFB]' role='measure' type='quantitative' />
            <column-instance column='[__tableau_internal_object_id__].[Country_22AE1ADBF0DD4ED3896676C8D9F9FAFB]' derivation='Count' name='[__tableau_internal_object_id__].[cnt:Country_22AE1ADBF0DD4ED3896676C8D9F9FAFB:qk]' pivot='key' type='quantitative' />
            <column-instance column='[RestaurantName]' derivation='None' name='[none:RestaurantName:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0gyrh5s04co3pi1avdh6e0jx2uig].[none:RestaurantName:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0gyrh5s04co3pi1avdh6e0jx2uig].[__tableau_internal_object_id__].[cnt:Country_22AE1ADBF0DD4ED3896676C8D9F9FAFB:qk]' shelf='rows' />
          </shelf-sorts>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='field-labels'>
            <format attr='background-color' value='#00000000' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0gyrh5s04co3pi1avdh6e0jx2uig].[none:RestaurantName:nk]</rows>
        <cols>[federated.0gyrh5s04co3pi1avdh6e0jx2uig].[__tableau_internal_object_id__].[cnt:Country_22AE1ADBF0DD4ED3896676C8D9F9FAFB:qk]</cols>
      </table>
      <simple-id uuid='{6E97F0A4-D8F4-46AF-A141-258E5F78CFF4}' />
    </worksheet>
    <worksheet name='Country wise count of cuisines'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontcolor='#e10004'>Country Wise Count of Cuisines</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Main+ (Zomata)' name='federated.0gyrh5s04co3pi1avdh6e0jx2uig' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0gyrh5s04co3pi1avdh6e0jx2uig'>
            <column datatype='string' name='[Countryname]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='string' name='[Cuisines]' role='dimension' type='nominal' />
            <column-instance column='[Cuisines]' derivation='Count' name='[cnt:Cuisines:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Countryname]' derivation='None' name='[none:Countryname:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0gyrh5s04co3pi1avdh6e0jx2uig].[Action (Cuisines)]'>
            <groupfilter function='level-members' level='[Cuisines]' user:ui-action-filter='[Action3_30A0FE73CE9E4DBA94A064B451665353]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0gyrh5s04co3pi1avdh6e0jx2uig].[none:Countryname:nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Countryname:nk]' />
              <groupfilter function='member' level='[none:Countryname:nk]' member='%null%' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0gyrh5s04co3pi1avdh6e0jx2uig].[none:Countryname:nk]</column>
            <column>[federated.0gyrh5s04co3pi1avdh6e0jx2uig].[Action (Cuisines)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='label'>
            <format attr='text-format' field='[federated.0gyrh5s04co3pi1avdh6e0jx2uig].[cnt:Cuisines:qk]' value='n#,##0;-#,##0' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.0gyrh5s04co3pi1avdh6e0jx2uig].[cnt:Cuisines:qk]' palette='red_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='stroke-size' scope='rows' value='0' />
            <format attr='line-visibility' scope='rows' value='off' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <lod column='[federated.0gyrh5s04co3pi1avdh6e0jx2uig].[none:Countryname:nk]' />
              <color column='[federated.0gyrh5s04co3pi1avdh6e0jx2uig].[cnt:Cuisines:qk]' />
              <geometry column='[federated.0gyrh5s04co3pi1avdh6e0jx2uig].[Geometry (generated)]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='size' value='1.4832596778869629' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0gyrh5s04co3pi1avdh6e0jx2uig].[Latitude (generated)]</rows>
        <cols>[federated.0gyrh5s04co3pi1avdh6e0jx2uig].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{BDA4665C-E0D4-4503-9935-9C0FBCF1D0E9}' />
    </worksheet>
    <worksheet name='Q 1'>
      <table>
        <view>
          <datasources>
            <datasource caption='Main+ (Zomata)' name='federated.0gyrh5s04co3pi1avdh6e0jx2uig' />
          </datasources>
          <datasource-dependencies datasource='federated.0gyrh5s04co3pi1avdh6e0jx2uig'>
            <column caption='Country1' datatype='string' name='[Calculation_164944388468121603]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF[CountryCode]=1 then &quot;India&quot;&#13;&#10;ELSEIF [CountryCode]=216 then &quot;United States&quot;&#13;&#10;ELSEIF [CountryCode]=215 then &quot;Scotland&quot; &#13;&#10;ELSEIF [CountryCode]=184 then &quot;Singapore&quot;&#13;&#10;ELSEIF [CountryCode]=37 then &quot;Ontario&quot;&#13;&#10;ELSEIF [CountryCode]=148 then &quot;New Zealand&quot;&#13;&#10;ELSEIF [CountryCode]=214 then &quot;United Arab Emirates&quot;&#13;&#10;ELSEIF [CountryCode]=30 then &quot;Brazil&quot;&#13;&#10;ELSEIF [CountryCode]=14 then &quot;Liberia&quot;&#13;&#10;ELSEIF [CountryCode]=208 then &quot;Turkey&quot;&#13;&#10;ELSEIF [CountryCode]=166 then &quot;Qatar&quot;&#13;&#10;ELSEIF [CountryCode]=189 then &quot;south Africa&quot;&#13;&#10;ELSEIF [CountryCode]=162 then &quot;Philippines&quot;&#13;&#10;ELSEIF [CountryCode]=191 then &quot;Sri Lanka&quot;&#13;&#10;ELSE &quot;Indonesia&quot;&#13;&#10;END' />
            </column>
            <column caption='Country Code' datatype='integer' name='[CountryCode]' role='dimension' type='ordinal' />
            <column-instance column='[Calculation_164944388468121603]' derivation='None' name='[none:Calculation_164944388468121603:nk]' pivot='key' type='nominal' />
            <column-instance column='[CountryCode]' derivation='None' name='[none:CountryCode:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0gyrh5s04co3pi1avdh6e0jx2uig].[none:Calculation_164944388468121603:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0gyrh5s04co3pi1avdh6e0jx2uig].[none:CountryCode:ok]</rows>
        <cols />
      </table>
      <simple-id uuid='{84DCBE38-DE76-4A3C-9F5B-4B302F9A7EDC}' />
    </worksheet>
    <worksheet name='Q 2'>
      <table>
        <view>
          <datasources>
            <datasource caption='Main+ (Zomata)' name='federated.0gyrh5s04co3pi1avdh6e0jx2uig' />
          </datasources>
          <datasource-dependencies datasource='federated.0gyrh5s04co3pi1avdh6e0jx2uig'>
            <column caption='order_year' datatype='string' name='[Calculation_164944388474650630]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='STR(YEAR([Datekey_Opening]))' />
            </column>
            <column caption='Month no' datatype='integer' name='[Calculation_164944388474908679]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='MONTH([Datekey_Opening])' />
            </column>
            <column caption='Month name' datatype='string' name='[Calculation_164944388475953160]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='DATENAME(&apos;month&apos;,[Datekey_Opening])' />
            </column>
            <column caption='Quarter' datatype='string' name='[Calculation_164944388542275593]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='&quot;Q&quot; + DATENAME(&apos;quarter&apos;,[Datekey_Opening])' />
            </column>
            <column caption='Weekday no' datatype='integer' name='[Calculation_164944388542541834]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='DATEPART(&apos;weekday&apos;,[Datekey_Opening])' />
            </column>
            <column caption='Weekday name' datatype='string' name='[Calculation_164944388542816267]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='DATENAME(&apos;weekday&apos;,[Datekey_Opening])' />
            </column>
            <column caption='Month_Year' datatype='string' name='[Calculation_164944388543401996]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='STR(YEAR([Datekey_Opening])) + &quot;/&quot; + STR(MONTH([Datekey_Opening]))' />
            </column>
            <column caption='Financial Month' datatype='integer' name='[Calculation_164944388543889421]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF  MONTH([Datekey_Opening]) - 3 &gt; 0&#13;&#10;THEN MONTH([Datekey_Opening]) - 3&#13;&#10;ELSE MONTH([Datekey_Opening]) + 12 - 3&#13;&#10;END' />
            </column>
            <column caption='Financial Quarter' datatype='integer' name='[Calculation_164944388544102414]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='DATEPART(&apos;quarter&apos;,DATEADD(&apos;month&apos;,-3,[Datekey_Opening]))' />
            </column>
            <column caption='Datekey Opening' datatype='datetime' name='[Datekey_Opening]' role='dimension' type='ordinal' />
            <column-instance column='[Calculation_164944388474650630]' derivation='None' name='[none:Calculation_164944388474650630:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_164944388474908679]' derivation='None' name='[none:Calculation_164944388474908679:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_164944388475953160]' derivation='None' name='[none:Calculation_164944388475953160:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_164944388542275593]' derivation='None' name='[none:Calculation_164944388542275593:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_164944388542541834]' derivation='None' name='[none:Calculation_164944388542541834:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_164944388542816267]' derivation='None' name='[none:Calculation_164944388542816267:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_164944388543401996]' derivation='None' name='[none:Calculation_164944388543401996:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_164944388543889421]' derivation='None' name='[none:Calculation_164944388543889421:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_164944388544102414]' derivation='None' name='[none:Calculation_164944388544102414:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Datekey_Opening]' derivation='None' name='[none:Datekey_Opening:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <natural-sort column='[federated.0gyrh5s04co3pi1avdh6e0jx2uig].[none:Datekey_Opening:ok]' direction='ASC' />
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' value='53' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-format' field='[federated.0gyrh5s04co3pi1avdh6e0jx2uig].[none:Datekey_Opening:ok]' value='*dd-mm-yyyy' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0gyrh5s04co3pi1avdh6e0jx2uig].[none:Datekey_Opening:ok] / ([federated.0gyrh5s04co3pi1avdh6e0jx2uig].[none:Calculation_164944388474650630:nk] / ([federated.0gyrh5s04co3pi1avdh6e0jx2uig].[none:Calculation_164944388474908679:ok] / ([federated.0gyrh5s04co3pi1avdh6e0jx2uig].[none:Calculation_164944388475953160:nk] / ([federated.0gyrh5s04co3pi1avdh6e0jx2uig].[none:Calculation_164944388542275593:nk] / ([federated.0gyrh5s04co3pi1avdh6e0jx2uig].[none:Calculation_164944388542541834:ok] / ([federated.0gyrh5s04co3pi1avdh6e0jx2uig].[none:Calculation_164944388542816267:nk] / ([federated.0gyrh5s04co3pi1avdh6e0jx2uig].[none:Calculation_164944388543401996:nk] / ([federated.0gyrh5s04co3pi1avdh6e0jx2uig].[none:Calculation_164944388543889421:ok] / [federated.0gyrh5s04co3pi1avdh6e0jx2uig].[none:Calculation_164944388544102414:ok])))))))))</rows>
        <cols />
      </table>
      <simple-id uuid='{594194A1-8D2B-4CAF-ACFC-E187493E72DD}' />
    </worksheet>
    <worksheet name='Q 3.1'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontcolor='#e10004'>Restaurants in City</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Main+ (Zomata)' name='federated.0gyrh5s04co3pi1avdh6e0jx2uig' />
            <datasource name='Parameters' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Date Parameter ' datatype='string' name='[Parameter 2]' param-domain-type='list' role='measure' type='nominal' value='&quot;month&quot;'>
              <calculation class='tableau' formula='&quot;month&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.0gyrh5s04co3pi1avdh6e0jx2uig'>
            <column caption='order_year' datatype='string' name='[Calculation_164944388474650630]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='STR(YEAR([Datekey_Opening]))' />
            </column>
            <column caption='order_quarter' datatype='string' name='[Calculation_164944388544782351]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='STR(YEAR([Datekey_Opening])) + &quot;Q&quot; + DATENAME(&apos;quarter&apos;,[Datekey_Opening])' />
            </column>
            <column caption='order_month' datatype='string' name='[Calculation_164944388544954384]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='STR(YEAR([Datekey_Opening])) + &quot;/&quot; + STR(MONTH([Datekey_Opening]))' />
            </column>
            <column caption='Date' datatype='string' name='[Calculation_164944388545413137]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='CASE [Parameters].[Parameter 2]&#13;&#10;WHEN &apos;month&apos; THEN [Calculation_164944388544954384]&#13;&#10;WHEN &apos;year&apos; THEN [Calculation_164944388474650630]&#13;&#10;WHEN &apos;quarter&apos; THEN [Calculation_164944388544782351]&#13;&#10;END' />
            </column>
            <column datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
            <column caption='Datekey Opening' datatype='datetime' name='[Datekey_Opening]' role='dimension' type='ordinal' />
            <column caption='Restaurant Name' datatype='string' name='[RestaurantName]' role='dimension' type='nominal' />
            <column-instance column='[RestaurantName]' derivation='CountD' name='[ctd:RestaurantName:qk]' pivot='key' type='quantitative' />
            <column-instance column='[City]' derivation='None' name='[none:City:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0gyrh5s04co3pi1avdh6e0jx2uig].[Action (Date)]'>
            <groupfilter function='level-members' level='[Calculation_164944388545413137]' user:ui-action-filter='[Action1_ADEFE3FF173941E183044D89AEB67CBD]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0gyrh5s04co3pi1avdh6e0jx2uig].[none:City:nk]'>
            <groupfilter function='level-members' level='[none:City:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0gyrh5s04co3pi1avdh6e0jx2uig].[none:City:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0gyrh5s04co3pi1avdh6e0jx2uig].[ctd:RestaurantName:qk]' shelf='columns' />
          </shelf-sorts>
          <slices>
            <column>[federated.0gyrh5s04co3pi1avdh6e0jx2uig].[none:City:nk]</column>
            <column>[federated.0gyrh5s04co3pi1avdh6e0jx2uig].[Action (Date)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='display' class='0' field='[federated.0gyrh5s04co3pi1avdh6e0jx2uig].[ctd:RestaurantName:qk]' scope='rows' value='false' />
          </style-rule>
          <style-rule element='field-labels-spanner'>
            <format attr='separator' scope='cols' value='' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='size-bar' field='[federated.0gyrh5s04co3pi1avdh6e0jx2uig].[ctd:RestaurantName:qk]' field-type='quantitative' max-size='1' min-size='0.005' type='centersize' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='stroke-size' scope='rows' value='0' />
            <format attr='line-visibility' scope='rows' value='off' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-color' value='#e10004' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0gyrh5s04co3pi1avdh6e0jx2uig].[ctd:RestaurantName:qk]</rows>
        <cols>[federated.0gyrh5s04co3pi1avdh6e0jx2uig].[none:City:nk]</cols>
      </table>
      <simple-id uuid='{B7E2E5B4-CD02-4B89-8AD6-746BA0E74CF7}' />
    </worksheet>
    <worksheet name='Q 3.2'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontcolor='#e10004'>Restaurants in Country</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Main+ (Zomata)' name='federated.0gyrh5s04co3pi1avdh6e0jx2uig' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Date Parameter ' datatype='string' name='[Parameter 2]' param-domain-type='list' role='measure' type='nominal' value='&quot;month&quot;'>
              <calculation class='tableau' formula='&quot;month&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.0gyrh5s04co3pi1avdh6e0jx2uig'>
            <column caption='Country1' datatype='string' name='[Calculation_164944388468121603]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF[CountryCode]=1 then &quot;India&quot;&#13;&#10;ELSEIF [CountryCode]=216 then &quot;United States&quot;&#13;&#10;ELSEIF [CountryCode]=215 then &quot;Scotland&quot; &#13;&#10;ELSEIF [CountryCode]=184 then &quot;Singapore&quot;&#13;&#10;ELSEIF [CountryCode]=37 then &quot;Ontario&quot;&#13;&#10;ELSEIF [CountryCode]=148 then &quot;New Zealand&quot;&#13;&#10;ELSEIF [CountryCode]=214 then &quot;United Arab Emirates&quot;&#13;&#10;ELSEIF [CountryCode]=30 then &quot;Brazil&quot;&#13;&#10;ELSEIF [CountryCode]=14 then &quot;Liberia&quot;&#13;&#10;ELSEIF [CountryCode]=208 then &quot;Turkey&quot;&#13;&#10;ELSEIF [CountryCode]=166 then &quot;Qatar&quot;&#13;&#10;ELSEIF [CountryCode]=189 then &quot;south Africa&quot;&#13;&#10;ELSEIF [CountryCode]=162 then &quot;Philippines&quot;&#13;&#10;ELSEIF [CountryCode]=191 then &quot;Sri Lanka&quot;&#13;&#10;ELSE &quot;Indonesia&quot;&#13;&#10;END' />
            </column>
            <column caption='order_year' datatype='string' name='[Calculation_164944388474650630]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='STR(YEAR([Datekey_Opening]))' />
            </column>
            <column caption='order_quarter' datatype='string' name='[Calculation_164944388544782351]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='STR(YEAR([Datekey_Opening])) + &quot;Q&quot; + DATENAME(&apos;quarter&apos;,[Datekey_Opening])' />
            </column>
            <column caption='order_month' datatype='string' name='[Calculation_164944388544954384]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='STR(YEAR([Datekey_Opening])) + &quot;/&quot; + STR(MONTH([Datekey_Opening]))' />
            </column>
            <column caption='Date' datatype='string' name='[Calculation_164944388545413137]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='CASE [Parameters].[Parameter 2]&#13;&#10;WHEN &apos;month&apos; THEN [Calculation_164944388544954384]&#13;&#10;WHEN &apos;year&apos; THEN [Calculation_164944388474650630]&#13;&#10;WHEN &apos;quarter&apos; THEN [Calculation_164944388544782351]&#13;&#10;END' />
            </column>
            <column caption='Country Code' datatype='integer' name='[CountryCode]' role='dimension' type='ordinal' />
            <column caption='Datekey Opening' datatype='datetime' name='[Datekey_Opening]' role='dimension' type='ordinal' />
            <column caption='Restaurant ID' datatype='integer' name='[RestaurantID]' role='dimension' type='ordinal' />
            <column-instance column='[RestaurantID]' derivation='CountD' name='[ctd:RestaurantID:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_164944388468121603]' derivation='None' name='[none:Calculation_164944388468121603:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0gyrh5s04co3pi1avdh6e0jx2uig].[Action (Date)]'>
            <groupfilter function='member' level='[Calculation_164944388545413137]' member='&quot;2012&quot;' user:ui-action-filter='[Action1_ADEFE3FF173941E183044D89AEB67CBD]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0gyrh5s04co3pi1avdh6e0jx2uig].[none:Calculation_164944388468121603:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0gyrh5s04co3pi1avdh6e0jx2uig].[ctd:RestaurantID:qk]' shelf='columns' />
          </shelf-sorts>
          <slices>
            <column>[federated.0gyrh5s04co3pi1avdh6e0jx2uig].[Action (Date)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='display' class='0' field='[federated.0gyrh5s04co3pi1avdh6e0jx2uig].[ctd:RestaurantID:qk]' scope='rows' value='false' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='stroke-size' scope='rows' value='0' />
            <format attr='line-visibility' scope='rows' value='off' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-color' value='#e10004' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0gyrh5s04co3pi1avdh6e0jx2uig].[ctd:RestaurantID:qk]</rows>
        <cols>[federated.0gyrh5s04co3pi1avdh6e0jx2uig].[none:Calculation_164944388468121603:nk]</cols>
      </table>
      <simple-id uuid='{F4543B20-837D-4837-A436-9B6667486A10}' />
    </worksheet>
    <worksheet name='Q 4'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontcolor='#e10004'>Restaurants Open</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Main+ (Zomata)' name='federated.0gyrh5s04co3pi1avdh6e0jx2uig' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Date Parameter ' datatype='string' name='[Parameter 2]' param-domain-type='list' role='measure' type='nominal' value='&quot;month&quot;'>
              <calculation class='tableau' formula='&quot;month&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.0gyrh5s04co3pi1avdh6e0jx2uig'>
            <column caption='order_year' datatype='string' name='[Calculation_164944388474650630]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='STR(YEAR([Datekey_Opening]))' />
            </column>
            <column caption='order_quarter' datatype='string' name='[Calculation_164944388544782351]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='STR(YEAR([Datekey_Opening])) + &quot;Q&quot; + DATENAME(&apos;quarter&apos;,[Datekey_Opening])' />
            </column>
            <column caption='order_month' datatype='string' name='[Calculation_164944388544954384]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='STR(YEAR([Datekey_Opening])) + &quot;/&quot; + STR(MONTH([Datekey_Opening]))' />
            </column>
            <column caption='Date' datatype='string' name='[Calculation_164944388545413137]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='CASE [Parameters].[Parameter 2]&#13;&#10;WHEN &apos;month&apos; THEN [Calculation_164944388544954384]&#13;&#10;WHEN &apos;year&apos; THEN [Calculation_164944388474650630]&#13;&#10;WHEN &apos;quarter&apos; THEN [Calculation_164944388544782351]&#13;&#10;END' />
            </column>
            <column caption='Datekey Opening' datatype='datetime' name='[Datekey_Opening]' role='dimension' type='ordinal' />
            <column caption='Has Online delivery' datatype='string' name='[Has_Online_delivery]' role='dimension' type='nominal' />
            <column caption='Restaurant ID' datatype='integer' name='[RestaurantID]' role='dimension' type='ordinal' />
            <column-instance column='[RestaurantID]' derivation='CountD' name='[ctd:RestaurantID:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_164944388545413137]' derivation='None' name='[none:Calculation_164944388545413137:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0gyrh5s04co3pi1avdh6e0jx2uig].[Action (Has Online delivery)]'>
            <groupfilter function='level-members' level='[Has_Online_delivery]' user:ui-action-filter='[Action2_574007DB46DE4718A30F1029A1614ACA]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0gyrh5s04co3pi1avdh6e0jx2uig].[Action (Has Online delivery)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='display' class='0' field='[federated.0gyrh5s04co3pi1avdh6e0jx2uig].[ctd:RestaurantID:qk]' scope='rows' value='false' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='border-color' value='#000000' />
            <format attr='border-width' value='0' />
            <format attr='border-style' value='none' />
          </style-rule>
          <style-rule element='header'>
            <format attr='border-style' value='solid' />
            <format attr='border-color' value='#000000' />
            <format attr='border-color' data-class='subtotal' value='#000000' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='border-color' value='#000000' />
            <format attr='border-width' value='0' />
            <format attr='border-style' value='none' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='line-pattern-only' value='solid' />
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-color' value='#e10004' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0gyrh5s04co3pi1avdh6e0jx2uig].[ctd:RestaurantID:qk]</rows>
        <cols>[federated.0gyrh5s04co3pi1avdh6e0jx2uig].[none:Calculation_164944388545413137:nk]</cols>
      </table>
      <simple-id uuid='{3B5BF0A6-4252-4B1F-A558-396A211A09BB}' />
    </worksheet>
    <worksheet name='Q 5'>
      <table>
        <view>
          <datasources>
            <datasource caption='Main+ (Zomata)' name='federated.0gyrh5s04co3pi1avdh6e0jx2uig' />
          </datasources>
          <datasource-dependencies datasource='federated.0gyrh5s04co3pi1avdh6e0jx2uig'>
            <column aggregation='Sum' caption='Rating 1' datatype='real' name='[Calculation_164944388608503827]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='[Rating]' />
            </column>
            <column datatype='real' name='[Rating]' role='measure' type='quantitative' />
            <column caption='Restaurant ID' datatype='integer' name='[RestaurantID]' role='dimension' type='ordinal' />
            <column-instance column='[RestaurantID]' derivation='CountD' name='[ctd:RestaurantID:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_164944388608503827]' derivation='None' name='[none:Calculation_164944388608503827:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0gyrh5s04co3pi1avdh6e0jx2uig].[none:Calculation_164944388608503827:ok]'>
            <groupfilter function='level-members' level='[none:Calculation_164944388608503827:ok]' />
          </filter>
          <slices>
            <column>[federated.0gyrh5s04co3pi1avdh6e0jx2uig].[none:Calculation_164944388608503827:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0gyrh5s04co3pi1avdh6e0jx2uig].[ctd:RestaurantID:qk]</rows>
        <cols>[federated.0gyrh5s04co3pi1avdh6e0jx2uig].[none:Calculation_164944388608503827:ok]</cols>
      </table>
      <simple-id uuid='{A6A27036-8682-4079-B352-7C16CC2E3FB3}' />
    </worksheet>
    <worksheet name='Q 6'>
      <table>
        <view>
          <datasources>
            <datasource caption='Main+ (Zomata)' name='federated.0gyrh5s04co3pi1avdh6e0jx2uig' />
          </datasources>
          <datasource-dependencies datasource='federated.0gyrh5s04co3pi1avdh6e0jx2uig'>
            <column caption='Average Cost for two' datatype='integer' name='[Average_Cost_for_two]' role='measure' type='quantitative' />
            <column caption='Bucket list' datatype='string' name='[Calculation_164944388609568788]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Average_Cost_for_two]&lt;=1000  then       &#13;&#10;&quot;0-1000&quot;&#13;&#10;ELSEIF [Average_Cost_for_two]&lt;=10000  then&#13;&#10;&quot;1001-10000&quot;&#13;&#10;ELSEIF [Average_Cost_for_two]&lt;=100000  then&#13;&#10;&quot;10001-100000&quot;&#13;&#10;ELSEIF [Average_Cost_for_two]&lt;=1000000  then&#13;&#10;&quot;100001-1000000&quot;&#13;&#10;END' />
            </column>
            <column-instance column='[Average_Cost_for_two]' derivation='None' name='[none:Average_Cost_for_two:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_164944388609568788]' derivation='None' name='[none:Calculation_164944388609568788:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>([federated.0gyrh5s04co3pi1avdh6e0jx2uig].[none:Calculation_164944388609568788:nk] / [federated.0gyrh5s04co3pi1avdh6e0jx2uig].[none:Average_Cost_for_two:ok])</rows>
        <cols />
      </table>
      <simple-id uuid='{49653E07-B77E-4568-9200-5C12006318E8}' />
    </worksheet>
    <worksheet name='Q 7'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontcolor='#e10004'>Has Table Booking</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Main+ (Zomata)' name='federated.0gyrh5s04co3pi1avdh6e0jx2uig' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Date Parameter ' datatype='string' name='[Parameter 2]' param-domain-type='list' role='measure' type='nominal' value='&quot;month&quot;'>
              <calculation class='tableau' formula='&quot;month&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.0gyrh5s04co3pi1avdh6e0jx2uig'>
            <column caption='order_year' datatype='string' name='[Calculation_164944388474650630]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='STR(YEAR([Datekey_Opening]))' />
            </column>
            <column caption='order_quarter' datatype='string' name='[Calculation_164944388544782351]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='STR(YEAR([Datekey_Opening])) + &quot;Q&quot; + DATENAME(&apos;quarter&apos;,[Datekey_Opening])' />
            </column>
            <column caption='order_month' datatype='string' name='[Calculation_164944388544954384]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='STR(YEAR([Datekey_Opening])) + &quot;/&quot; + STR(MONTH([Datekey_Opening]))' />
            </column>
            <column caption='Date' datatype='string' name='[Calculation_164944388545413137]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='CASE [Parameters].[Parameter 2]&#13;&#10;WHEN &apos;month&apos; THEN [Calculation_164944388544954384]&#13;&#10;WHEN &apos;year&apos; THEN [Calculation_164944388474650630]&#13;&#10;WHEN &apos;quarter&apos; THEN [Calculation_164944388544782351]&#13;&#10;END' />
            </column>
            <column caption='Datekey Opening' datatype='datetime' name='[Datekey_Opening]' role='dimension' type='ordinal' />
            <column caption='Has Online delivery' datatype='string' name='[Has_Online_delivery]' role='dimension' type='nominal' />
            <_.fcp.ObjectModelTableType.false...column caption='Main' datatype='integer' name='[__tableau_internal_object_id__].[Main_C562EB1EF78848B78126FD66CCC15CBE]' role='measure' type='quantitative' />
            <column caption='Has Table booking' datatype='string' name='[Has_Table_booking]' role='dimension' type='nominal' />
            <_.fcp.ObjectModelTableType.true...column caption='Main' datatype='table' name='[__tableau_internal_object_id__].[Main_C562EB1EF78848B78126FD66CCC15CBE]' role='measure' type='quantitative' />
            <column-instance column='[__tableau_internal_object_id__].[Main_C562EB1EF78848B78126FD66CCC15CBE]' derivation='Count' name='[__tableau_internal_object_id__].[pcto:cnt:Main_C562EB1EF78848B78126FD66CCC15CBE:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Table' type='PctTotal' />
            </column-instance>
            <column-instance column='[Has_Table_booking]' derivation='None' name='[none:Has_Table_booking:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0gyrh5s04co3pi1avdh6e0jx2uig].[Action (Date)]'>
            <groupfilter function='level-members' level='[Calculation_164944388545413137]' user:ui-action-filter='[Action1_ADEFE3FF173941E183044D89AEB67CBD]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0gyrh5s04co3pi1avdh6e0jx2uig].[Action (Has Online delivery)]'>
            <groupfilter function='level-members' level='[Has_Online_delivery]' user:ui-action-filter='[Action2_574007DB46DE4718A30F1029A1614ACA]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0gyrh5s04co3pi1avdh6e0jx2uig].[Action (Date)]</column>
            <column>[federated.0gyrh5s04co3pi1avdh6e0jx2uig].[Action (Has Online delivery)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='stroke-size' scope='rows' value='0' />
            <format attr='line-visibility' scope='rows' value='off' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Pie' />
            <encodings>
              <color column='[federated.0gyrh5s04co3pi1avdh6e0jx2uig].[none:Has_Table_booking:nk]' />
              <wedge-size column='[federated.0gyrh5s04co3pi1avdh6e0jx2uig].[__tableau_internal_object_id__].[pcto:cnt:Main_C562EB1EF78848B78126FD66CCC15CBE:qk]' />
              <size column='[federated.0gyrh5s04co3pi1avdh6e0jx2uig].[__tableau_internal_object_id__].[pcto:cnt:Main_C562EB1EF78848B78126FD66CCC15CBE:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='false' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
        <percentages enabled='true' mode='table' />
      </table>
      <simple-id uuid='{F04C1BCA-980E-49B1-AADE-F03BCE7D750C}' />
    </worksheet>
    <worksheet name='Q 8'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontcolor='#e10004'>Has Online Delivery</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Main+ (Zomata)' name='federated.0gyrh5s04co3pi1avdh6e0jx2uig' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Date Parameter ' datatype='string' name='[Parameter 2]' param-domain-type='list' role='measure' type='nominal' value='&quot;month&quot;'>
              <calculation class='tableau' formula='&quot;month&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.0gyrh5s04co3pi1avdh6e0jx2uig'>
            <column caption='order_year' datatype='string' name='[Calculation_164944388474650630]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='STR(YEAR([Datekey_Opening]))' />
            </column>
            <column caption='order_quarter' datatype='string' name='[Calculation_164944388544782351]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='STR(YEAR([Datekey_Opening])) + &quot;Q&quot; + DATENAME(&apos;quarter&apos;,[Datekey_Opening])' />
            </column>
            <column caption='order_month' datatype='string' name='[Calculation_164944388544954384]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='STR(YEAR([Datekey_Opening])) + &quot;/&quot; + STR(MONTH([Datekey_Opening]))' />
            </column>
            <column caption='Date' datatype='string' name='[Calculation_164944388545413137]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='CASE [Parameters].[Parameter 2]&#13;&#10;WHEN &apos;month&apos; THEN [Calculation_164944388544954384]&#13;&#10;WHEN &apos;year&apos; THEN [Calculation_164944388474650630]&#13;&#10;WHEN &apos;quarter&apos; THEN [Calculation_164944388544782351]&#13;&#10;END' />
            </column>
            <column caption='Datekey Opening' datatype='datetime' name='[Datekey_Opening]' role='dimension' type='ordinal' />
            <_.fcp.ObjectModelTableType.false...column caption='Main' datatype='integer' name='[__tableau_internal_object_id__].[Main_C562EB1EF78848B78126FD66CCC15CBE]' role='measure' type='quantitative' />
            <column caption='Has Online delivery' datatype='string' name='[Has_Online_delivery]' role='dimension' type='nominal' />
            <_.fcp.ObjectModelTableType.true...column caption='Main' datatype='table' name='[__tableau_internal_object_id__].[Main_C562EB1EF78848B78126FD66CCC15CBE]' role='measure' type='quantitative' />
            <column-instance column='[__tableau_internal_object_id__].[Main_C562EB1EF78848B78126FD66CCC15CBE]' derivation='Count' name='[__tableau_internal_object_id__].[pcto:cnt:Main_C562EB1EF78848B78126FD66CCC15CBE:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Table' type='PctTotal' />
            </column-instance>
            <column-instance column='[Has_Online_delivery]' derivation='None' name='[none:Has_Online_delivery:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0gyrh5s04co3pi1avdh6e0jx2uig].[Action (Date)]'>
            <groupfilter function='level-members' level='[Calculation_164944388545413137]' user:ui-action-filter='[Action1_ADEFE3FF173941E183044D89AEB67CBD]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0gyrh5s04co3pi1avdh6e0jx2uig].[Action (Date)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='border-color' value='#000000' />
            <format attr='border-width' value='0' />
            <format attr='border-style' value='none' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='border-style' data-class='subtotal' value='solid' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='stroke-size' scope='rows' value='0' />
            <format attr='line-visibility' scope='rows' value='off' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Pie' />
            <encodings>
              <color column='[federated.0gyrh5s04co3pi1avdh6e0jx2uig].[none:Has_Online_delivery:nk]' />
              <wedge-size column='[federated.0gyrh5s04co3pi1avdh6e0jx2uig].[__tableau_internal_object_id__].[pcto:cnt:Main_C562EB1EF78848B78126FD66CCC15CBE:qk]' />
              <size column='[federated.0gyrh5s04co3pi1avdh6e0jx2uig].[__tableau_internal_object_id__].[pcto:cnt:Main_C562EB1EF78848B78126FD66CCC15CBE:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
        <percentages enabled='true' mode='table' />
      </table>
      <simple-id uuid='{B8DF5323-6DFB-448D-BEB1-E6D1B32E99D3}' />
    </worksheet>
    <worksheet name='Sheet 14'>
      <table>
        <view>
          <datasources>
            <datasource caption='Main+ (Zomata)' name='federated.0gyrh5s04co3pi1avdh6e0jx2uig' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Date Parameter ' datatype='string' name='[Parameter 2]' param-domain-type='list' role='measure' type='nominal' value='&quot;month&quot;'>
              <calculation class='tableau' formula='&quot;month&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.0gyrh5s04co3pi1avdh6e0jx2uig'>
            <column caption='order_year' datatype='string' name='[Calculation_164944388474650630]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='STR(YEAR([Datekey_Opening]))' />
            </column>
            <column caption='order_quarter' datatype='string' name='[Calculation_164944388544782351]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='STR(YEAR([Datekey_Opening])) + &quot;Q&quot; + DATENAME(&apos;quarter&apos;,[Datekey_Opening])' />
            </column>
            <column caption='order_month' datatype='string' name='[Calculation_164944388544954384]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='STR(YEAR([Datekey_Opening])) + &quot;/&quot; + STR(MONTH([Datekey_Opening]))' />
            </column>
            <column caption='Date' datatype='string' name='[Calculation_164944388545413137]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='CASE [Parameters].[Parameter 2]&#13;&#10;WHEN &apos;month&apos; THEN [Calculation_164944388544954384]&#13;&#10;WHEN &apos;year&apos; THEN [Calculation_164944388474650630]&#13;&#10;WHEN &apos;quarter&apos; THEN [Calculation_164944388544782351]&#13;&#10;END' />
            </column>
            <column datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
            <column datatype='string' name='[Countryname]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='string' name='[Cuisines]' role='dimension' type='nominal' />
            <column caption='Datekey Opening' datatype='datetime' name='[Datekey_Opening]' role='dimension' type='ordinal' />
            <column caption='Has Online delivery' datatype='string' name='[Has_Online_delivery]' role='dimension' type='nominal' />
            <column caption='Restaurant Name' datatype='string' name='[RestaurantName]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Votes]' role='measure' type='quantitative' />
            <column-instance column='[Countryname]' derivation='Count' name='[cnt:Countryname:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Cuisines]' derivation='Count' name='[cnt:Cuisines:qk]' pivot='key' type='quantitative' />
            <column-instance column='[RestaurantName]' derivation='Count' name='[cnt:RestaurantName:qk]' pivot='key' type='quantitative' />
            <column-instance column='[City]' derivation='CountD' name='[ctd:City:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Votes]' derivation='Sum' name='[sum:Votes:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0gyrh5s04co3pi1avdh6e0jx2uig].[Action (Date)]'>
            <groupfilter function='level-members' level='[Calculation_164944388545413137]' user:ui-action-filter='[Action1_ADEFE3FF173941E183044D89AEB67CBD]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0gyrh5s04co3pi1avdh6e0jx2uig].[Action (Has Online delivery)]'>
            <groupfilter function='level-members' level='[Has_Online_delivery]' user:ui-action-filter='[Action2_574007DB46DE4718A30F1029A1614ACA]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0gyrh5s04co3pi1avdh6e0jx2uig].[Action (Date)]</column>
            <column>[federated.0gyrh5s04co3pi1avdh6e0jx2uig].[Action (Has Online delivery)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='border-style' value='solid' />
            <format attr='border-color' value='#000000' />
            <format attr='text-format' field='[federated.0gyrh5s04co3pi1avdh6e0jx2uig].[sum:Votes:qk]' value='n#,##0,,.00M;-#,##0,,.00M' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <text column='[federated.0gyrh5s04co3pi1avdh6e0jx2uig].[cnt:Countryname:qk]' />
              <text column='[federated.0gyrh5s04co3pi1avdh6e0jx2uig].[ctd:City:qk]' />
              <text column='[federated.0gyrh5s04co3pi1avdh6e0jx2uig].[cnt:Cuisines:qk]' />
              <text column='[federated.0gyrh5s04co3pi1avdh6e0jx2uig].[cnt:RestaurantName:qk]' />
              <text column='[federated.0gyrh5s04co3pi1avdh6e0jx2uig].[sum:Votes:qk]' />
            </encodings>
            <customized-label>
              <formatted-text>
                <run bold='true' fontcolor='#e10004' fontsize='16'><![CDATA[<[federated.0gyrh5s04co3pi1avdh6e0jx2uig].[cnt:Countryname:qk]>]]></run>
                <run>Æ&#10;</run>
                <run bold='true' fontsize='10'>  Total Countries</run>
                <run>Æ&#10;&#10;&#10;</run>
                <run bold='true' fontcolor='#e10004' fontsize='16'><![CDATA[<[federated.0gyrh5s04co3pi1avdh6e0jx2uig].[ctd:City:qk]>]]></run>
                <run>Æ&#10;</run>
                <run bold='true' fontsize='10'>Total Cities</run>
                <run>Æ&#10;&#10;&#10;</run>
                <run bold='true' fontcolor='#e10004' fontsize='16'><![CDATA[<[federated.0gyrh5s04co3pi1avdh6e0jx2uig].[cnt:RestaurantName:qk]>]]></run>
                <run>Æ&#10;</run>
                <run bold='true' fontsize='10'>Total Restaurants</run>
                <run>Æ&#10;&#10;&#10;</run>
                <run bold='true' fontcolor='#e10004' fontsize='16'><![CDATA[<[federated.0gyrh5s04co3pi1avdh6e0jx2uig].[cnt:Cuisines:qk]>]]></run>
                <run>Æ&#10;</run>
                <run bold='true' fontsize='10'>Total Cuisines</run>
                <run>Æ&#10;&#10;&#10;</run>
                <run bold='true' fontcolor='#e10004' fontsize='16'><![CDATA[<[federated.0gyrh5s04co3pi1avdh6e0jx2uig].[sum:Votes:qk]>]]></run>
                <run>Æ&#10;</run>
                <run bold='true' fontsize='10'>Total Votes</run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='cell'>
                <format attr='text-align' value='center' />
                <format attr='vertical-align' value='center' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='size' value='2.022099494934082' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{11EC580C-F925-4F54-BCB2-97CBACE7B5BC}' />
    </worksheet>
    <worksheet name='Sheet 16'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontcolor='#e10004'>Cuisines </run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Main+ (Zomata)' name='federated.0gyrh5s04co3pi1avdh6e0jx2uig' />
          </datasources>
          <datasource-dependencies datasource='federated.0gyrh5s04co3pi1avdh6e0jx2uig'>
            <_.fcp.ObjectModelTableType.false...column caption='Main' datatype='integer' name='[__tableau_internal_object_id__].[Main_C562EB1EF78848B78126FD66CCC15CBE]' role='measure' type='quantitative' />
            <column datatype='string' name='[Cuisines]' role='dimension' type='nominal' />
            <_.fcp.ObjectModelTableType.true...column caption='Main' datatype='table' name='[__tableau_internal_object_id__].[Main_C562EB1EF78848B78126FD66CCC15CBE]' role='measure' type='quantitative' />
            <column-instance column='[__tableau_internal_object_id__].[Main_C562EB1EF78848B78126FD66CCC15CBE]' derivation='Count' name='[__tableau_internal_object_id__].[cnt:Main_C562EB1EF78848B78126FD66CCC15CBE:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Cuisines]' derivation='None' name='[none:Cuisines:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <color column='[federated.0gyrh5s04co3pi1avdh6e0jx2uig].[none:Cuisines:nk]' />
              <size column='[federated.0gyrh5s04co3pi1avdh6e0jx2uig].[__tableau_internal_object_id__].[cnt:Main_C562EB1EF78848B78126FD66CCC15CBE:qk]' />
              <text column='[federated.0gyrh5s04co3pi1avdh6e0jx2uig].[none:Cuisines:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{F2350B17-DAA2-443C-AAF4-6E0CCED6001E}' />
    </worksheet>
    <worksheet name='Sheet 17'>
      <table>
        <view>
          <datasources />
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{F200303F-9075-4E0C-8D2D-0F5B4CEF5073}' />
    </worksheet>
    <worksheet name='Top 10 cities max voted'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1'>Top 10 Cities by Max Voted Restuarants</run>
            <run fontalignment='1'>Æ&#10;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Main+ (Zomata)' name='federated.0gyrh5s04co3pi1avdh6e0jx2uig' />
          </datasources>
          <datasource-dependencies datasource='federated.0gyrh5s04co3pi1avdh6e0jx2uig'>
            <column datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
            <column datatype='integer' name='[Votes]' role='measure' type='quantitative' />
            <column-instance column='[Votes]' derivation='Max' name='[max:Votes:qk]' pivot='key' type='quantitative' />
            <column-instance column='[City]' derivation='None' name='[none:City:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0gyrh5s04co3pi1avdh6e0jx2uig].[none:City:nk]'>
            <groupfilter count='10' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='MAX([Votes])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:City:nk]' user:ui-manual-selection='true' user:ui-manual-selection-all-when-empty='true' user:ui-manual-selection-is-empty='true' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0gyrh5s04co3pi1avdh6e0jx2uig].[none:City:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0gyrh5s04co3pi1avdh6e0jx2uig].[max:Votes:qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.0gyrh5s04co3pi1avdh6e0jx2uig].[none:City:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.0gyrh5s04co3pi1avdh6e0jx2uig].[max:Votes:qk]' value='n#,##0,K;-#,##0,K' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='stroke-size' scope='cols' value='0' />
            <format attr='line-visibility' scope='cols' value='off' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0gyrh5s04co3pi1avdh6e0jx2uig].[none:City:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0gyrh5s04co3pi1avdh6e0jx2uig].[none:City:nk]</rows>
        <cols>[federated.0gyrh5s04co3pi1avdh6e0jx2uig].[max:Votes:qk]</cols>
      </table>
      <simple-id uuid='{23417424-7FEA-4888-B095-60647EF27464}' />
    </worksheet>
    <worksheet name='is delivering now'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontcolor='#e10004'>Is Delivering now?</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Main+ (Zomata)' name='federated.0gyrh5s04co3pi1avdh6e0jx2uig' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Date Parameter ' datatype='string' name='[Parameter 2]' param-domain-type='list' role='measure' type='nominal' value='&quot;month&quot;'>
              <calculation class='tableau' formula='&quot;month&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.0gyrh5s04co3pi1avdh6e0jx2uig'>
            <column caption='order_year' datatype='string' name='[Calculation_164944388474650630]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='STR(YEAR([Datekey_Opening]))' />
            </column>
            <column caption='order_quarter' datatype='string' name='[Calculation_164944388544782351]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='STR(YEAR([Datekey_Opening])) + &quot;Q&quot; + DATENAME(&apos;quarter&apos;,[Datekey_Opening])' />
            </column>
            <column caption='order_month' datatype='string' name='[Calculation_164944388544954384]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='STR(YEAR([Datekey_Opening])) + &quot;/&quot; + STR(MONTH([Datekey_Opening]))' />
            </column>
            <column caption='Date' datatype='string' name='[Calculation_164944388545413137]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='CASE [Parameters].[Parameter 2]&#13;&#10;WHEN &apos;month&apos; THEN [Calculation_164944388544954384]&#13;&#10;WHEN &apos;year&apos; THEN [Calculation_164944388474650630]&#13;&#10;WHEN &apos;quarter&apos; THEN [Calculation_164944388544782351]&#13;&#10;END' />
            </column>
            <column caption='Datekey Opening' datatype='datetime' name='[Datekey_Opening]' role='dimension' type='ordinal' />
            <column caption='Has Online delivery' datatype='string' name='[Has_Online_delivery]' role='dimension' type='nominal' />
            <_.fcp.ObjectModelTableType.false...column caption='Main' datatype='integer' name='[__tableau_internal_object_id__].[Main_C562EB1EF78848B78126FD66CCC15CBE]' role='measure' type='quantitative' />
            <column caption='Is delivering now' datatype='string' name='[Is_delivering_now]' role='dimension' type='nominal' />
            <_.fcp.ObjectModelTableType.true...column caption='Main' datatype='table' name='[__tableau_internal_object_id__].[Main_C562EB1EF78848B78126FD66CCC15CBE]' role='measure' type='quantitative' />
            <column-instance column='[__tableau_internal_object_id__].[Main_C562EB1EF78848B78126FD66CCC15CBE]' derivation='Count' name='[__tableau_internal_object_id__].[pcto:cnt:Main_C562EB1EF78848B78126FD66CCC15CBE:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Table' type='PctTotal' />
            </column-instance>
            <column-instance column='[Is_delivering_now]' derivation='None' name='[none:Is_delivering_now:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0gyrh5s04co3pi1avdh6e0jx2uig].[Action (Date)]'>
            <groupfilter function='level-members' level='[Calculation_164944388545413137]' user:ui-action-filter='[Action1_ADEFE3FF173941E183044D89AEB67CBD]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0gyrh5s04co3pi1avdh6e0jx2uig].[Action (Has Online delivery)]'>
            <groupfilter function='level-members' level='[Has_Online_delivery]' user:ui-action-filter='[Action2_574007DB46DE4718A30F1029A1614ACA]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0gyrh5s04co3pi1avdh6e0jx2uig].[Action (Date)]</column>
            <column>[federated.0gyrh5s04co3pi1avdh6e0jx2uig].[Action (Has Online delivery)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Pie' />
            <encodings>
              <color column='[federated.0gyrh5s04co3pi1avdh6e0jx2uig].[none:Is_delivering_now:nk]' />
              <wedge-size column='[federated.0gyrh5s04co3pi1avdh6e0jx2uig].[__tableau_internal_object_id__].[pcto:cnt:Main_C562EB1EF78848B78126FD66CCC15CBE:qk]' />
              <size column='[federated.0gyrh5s04co3pi1avdh6e0jx2uig].[__tableau_internal_object_id__].[pcto:cnt:Main_C562EB1EF78848B78126FD66CCC15CBE:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
        <percentages enabled='true' mode='table' />
      </table>
      <simple-id uuid='{21BBCC19-87E1-41A3-9AB7-9ED1E1AC2F5E}' />
    </worksheet>
    <worksheet name='top 5 costly restaurants'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1'>Top 5 Costly Restuarants by Average</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Main+ (Zomata)' name='federated.0gyrh5s04co3pi1avdh6e0jx2uig' />
          </datasources>
          <datasource-dependencies datasource='federated.0gyrh5s04co3pi1avdh6e0jx2uig'>
            <column caption='Average Cost for two' datatype='integer' name='[Average_Cost_for_two]' role='measure' type='quantitative' />
            <column caption='Restaurant Name' datatype='string' name='[RestaurantName]' role='dimension' type='nominal' />
            <column-instance column='[Average_Cost_for_two]' derivation='Avg' name='[avg:Average_Cost_for_two:qk]' pivot='key' type='quantitative' />
            <column-instance column='[RestaurantName]' derivation='None' name='[none:RestaurantName:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.0gyrh5s04co3pi1avdh6e0jx2uig].[avg:Average_Cost_for_two:qk]' included-values='all' />
          <filter class='categorical' column='[federated.0gyrh5s04co3pi1avdh6e0jx2uig].[none:RestaurantName:nk]'>
            <groupfilter count='5' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='AVG([Average_Cost_for_two])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:RestaurantName:nk]' user:ui-manual-selection='true' user:ui-manual-selection-all-when-empty='true' user:ui-manual-selection-is-empty='true' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0gyrh5s04co3pi1avdh6e0jx2uig].[none:RestaurantName:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0gyrh5s04co3pi1avdh6e0jx2uig].[avg:Average_Cost_for_two:qk]' shelf='columns' />
          </shelf-sorts>
          <slices>
            <column>[federated.0gyrh5s04co3pi1avdh6e0jx2uig].[none:RestaurantName:nk]</column>
            <column>[federated.0gyrh5s04co3pi1avdh6e0jx2uig].[avg:Average_Cost_for_two:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.0gyrh5s04co3pi1avdh6e0jx2uig].[avg:Average_Cost_for_two:qk]' value='n#,##0,K;-#,##0,K' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='stroke-size' scope='rows' value='0' />
            <format attr='line-visibility' scope='rows' value='off' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0gyrh5s04co3pi1avdh6e0jx2uig].[avg:Average_Cost_for_two:qk]</rows>
        <cols>[federated.0gyrh5s04co3pi1avdh6e0jx2uig].[none:RestaurantName:nk]</cols>
      </table>
      <simple-id uuid='{86AABAC9-2ADC-4887-A9CA-3E60D7E7487E}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Dashboard 1'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontcolor='#e10004'>Zomato Restaurants Analysis</run>
          </formatted-text>
        </title>
      </layout-options>
      <style />
      <size sizing-mode='automatic' />
      <datasources>
        <datasource name='Parameters' />
      </datasources>
      <datasource-dependencies datasource='Parameters'>
        <column caption='Date Parameter ' datatype='string' name='[Parameter 2]' param-domain-type='list' role='measure' type='nominal' value='&quot;month&quot;'>
          <calculation class='tableau' formula='&quot;month&quot;' />
          <members>
            <member value='&quot;year&quot;' />
            <member value='&quot;quarter&quot;' />
            <member value='&quot;month&quot;' />
          </members>
        </column>
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='88352' id='39' param='horz' type-v2='layout-flow' w='77990' x='21300' y='10297'>
            <zone h='88352' id='32' param='vert' type-v2='layout-flow' w='77990' x='21300' y='10297'>
              <zone h='88352' id='30' param='vert' type-v2='layout-flow' w='77990' x='21300' y='10297'>
                <zone h='88352' id='28' param='vert' type-v2='layout-flow' w='77990' x='21300' y='10297'>
                  <zone h='88352' id='9' param='horz' type-v2='layout-flow' w='77990' x='21300' y='10297'>
                    <zone h='88352' id='7' type-v2='layout-basic' w='77990' x='21300' y='10297'>
                      <zone h='36025' id='6' name='Q 8' w='26502' x='21300' y='62624'>
                        <zone-style>
                          <format attr='border-color' value='#000000' />
                          <format attr='border-style' value='solid' />
                          <format attr='border-width' value='1' />
                          <format attr='margin' value='4' />
                        </zone-style>
                      </zone>
                      <zone h='36025' id='11' name='Q 7' w='25660' x='73630' y='62624'>
                        <zone-style>
                          <format attr='border-color' value='#000000' />
                          <format attr='border-style' value='solid' />
                          <format attr='border-width' value='1' />
                          <format attr='margin' value='4' />
                        </zone-style>
                      </zone>
                      <zone h='52327' id='37' name='Q 4' w='77990' x='21300' y='10297'>
                        <zone-style>
                          <format attr='border-color' value='#000000' />
                          <format attr='border-style' value='solid' />
                          <format attr='border-width' value='1' />
                          <format attr='margin' value='4' />
                        </zone-style>
                      </zone>
                      <zone h='36025' id='62' name='is delivering now' w='25828' x='47802' y='62624'>
                        <zone-style>
                          <format attr='border-color' value='#000000' />
                          <format attr='border-style' value='solid' />
                          <format attr='border-width' value='1' />
                          <format attr='margin' value='4' />
                        </zone-style>
                      </zone>
                    </zone>
                  </zone>
                </zone>
              </zone>
            </zone>
          </zone>
          <zone h='76533' id='65' name='Sheet 14' show-title='false' w='20590' x='710' y='22116'>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone forceUpdate='true' h='20765' id='68' is-scaled='1' param='C:/Users/Hello/Desktop/zomato.jpg' type-v2='bitmap' w='20590' x='710' y='1351'>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='solid' />
              <format attr='border-width' value='1' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone h='8946' id='77' param='horz' type-v2='layout-flow' w='7914' x='91376' y='1351'>
            <zone h='8946' id='59' type-v2='dashboard-object' w='7914' x='91376' y='1351'>
              <button action='tabdoc:goto-sheet window-id=&quot;{2430961E-9E0F-46B2-B8CB-70D2EA21C5A2}&quot;'>
                <button-visual-state>
                  <image-path>C:/Users/Hello/Documents/My Tableau Repository/Shapes/Arrows/1-3.png</image-path>
                  <format attr='background-color' value='#e10004c1' />
                </button-visual-state>
              </button>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='solid' />
                <format attr='border-width' value='1' />
                <format attr='margin' value='4' />
              </zone-style>
            </zone>
          </zone>
          <zone fixed-size='38' h='8946' id='33' is-fixed='true' type-v2='title' w='70076' x='21300' y='1351'>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='solid' />
              <format attr='border-width' value='1' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
        <zone custom-title='true' h='7432' id='40' mode='compact' param='[Parameters].[Parameter 2]' type-v2='paramctrl' w='13966' x='84828' y='11318'>
          <formatted-text>
            <run fontcolor='#e10004'>Date Parameter </run>
          </formatted-text>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <layout-options>
            <title>
              <formatted-text>
                <run bold='true' fontalignment='1' fontcolor='#e10004'>Zomato Restaurants Analysis</run>
              </formatted-text>
            </title>
          </layout-options>
          <size maxheight='1850' minheight='1850' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='99' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='97298' id='98' param='vert' type-v2='layout-flow' w='98580' x='710' y='1351'>
                <zone fixed-size='38' h='8946' id='33' type-v2='title' w='70076' x='21300' y='1351'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='solid' />
                    <format attr='border-width' value='1' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='156' forceUpdate='true' h='20765' id='68' is-fixed='true' is-scaled='1' param='C:/Users/Hello/Desktop/zomato.jpg' type-v2='bitmap' w='20590' x='710' y='1351'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='solid' />
                    <format attr='border-width' value='1' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='8946' id='59' type-v2='dashboard-object' w='7914' x='91376' y='1351'>
                  <button action='tabdoc:goto-sheet window-id=&quot;{2430961E-9E0F-46B2-B8CB-70D2EA21C5A2}&quot;'>
                    <button-visual-state>
                      <image-path>C:/Users/Hello/Documents/My Tableau Repository/Shapes/Arrows/1-3.png</image-path>
                      <format attr='background-color' value='#e10004c1' />
                    </button-visual-state>
                  </button>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='solid' />
                    <format attr='border-width' value='1' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='52327' id='37' is-fixed='true' name='Q 4' w='77990' x='21300' y='10297'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='solid' />
                    <format attr='border-width' value='1' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone custom-title='true' h='7432' id='40' mode='compact' param='[Parameters].[Parameter 2]' type-v2='paramctrl' w='13966' x='84828' y='11318'>
                  <formatted-text>
                    <run fontcolor='#e10004'>Date Parameter </run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='76533' id='65' is-fixed='true' name='Sheet 14' show-title='false' w='20590' x='710' y='22116'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='278' h='36025' id='6' is-fixed='true' name='Q 8' w='26502' x='21300' y='62624'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='solid' />
                    <format attr='border-width' value='1' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='278' h='36025' id='62' is-fixed='true' name='is delivering now' w='25828' x='47802' y='62624'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='solid' />
                    <format attr='border-width' value='1' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='278' h='36025' id='11' is-fixed='true' name='Q 7' w='25660' x='73630' y='62624'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='solid' />
                    <format attr='border-width' value='1' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{E13AFE17-D1DB-43C3-9C21-B0C552FB35EF}' />
    </dashboard>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Dashboard 2'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontcolor='#e10004'>Zomato Restaurants Analysis</run>
          </formatted-text>
        </title>
      </layout-options>
      <style />
      <size sizing-mode='automatic' />
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='88516' id='14' param='vert' type-v2='layout-flow' w='98580' x='710' y='10133'>
            <zone h='88516' id='12' param='vert' type-v2='layout-flow' w='98580' x='710' y='10133'>
              <zone h='88516' id='7' param='horz' type-v2='layout-flow' w='98580' x='710' y='10133'>
                <zone h='88516' id='5' type-v2='layout-basic' w='98580' x='710' y='10133'>
                  <zone h='88516' id='43' name='Country wise count of cuisines' w='49288' x='710' y='10133'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                  <zone h='88516' id='50' name='Sheet 16' w='49292' x='49998' y='10133'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                </zone>
              </zone>
            </zone>
          </zone>
          <zone h='8782' id='35' param='horz' type-v2='layout-flow' w='6982' x='92308' y='1351'>
            <zone h='8782' id='16' type-v2='dashboard-object' w='6982' x='92308' y='1351'>
              <button action='tabdoc:goto-sheet window-id=&quot;{EB2A92C2-0D10-40CA-8B97-4EDF38BE1F45}&quot;'>
                <button-visual-state>
                  <image-path>C:/Users/Hello/Documents/My Tableau Repository/Shapes/Arrows/1-7.png</image-path>
                  <format attr='background-color' value='#e10004db' />
                </button-visual-state>
              </button>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='solid' />
                <format attr='border-width' value='1' />
                <format attr='margin' value='4' />
              </zone-style>
            </zone>
          </zone>
          <zone h='8782' id='15' type-v2='title' w='91598' x='710' y='1351'>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='solid' />
              <format attr='border-width' value='1' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <layout-options>
            <title>
              <formatted-text>
                <run bold='true' fontalignment='1' fontcolor='#e10004'>Zomato Restaurants Analysis</run>
              </formatted-text>
            </title>
          </layout-options>
          <size maxheight='750' minheight='750' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='56' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='97298' id='55' param='vert' type-v2='layout-flow' w='98580' x='710' y='1351'>
                <zone h='8782' id='15' type-v2='title' w='91598' x='710' y='1351'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='solid' />
                    <format attr='border-width' value='1' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='8782' id='16' type-v2='dashboard-object' w='6982' x='92308' y='1351'>
                  <button action='tabdoc:goto-sheet window-id=&quot;{EB2A92C2-0D10-40CA-8B97-4EDF38BE1F45}&quot;'>
                    <button-visual-state>
                      <image-path>C:/Users/Hello/Documents/My Tableau Repository/Shapes/Arrows/1-7.png</image-path>
                      <format attr='background-color' value='#e10004db' />
                    </button-visual-state>
                  </button>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='solid' />
                    <format attr='border-width' value='1' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='88516' id='43' is-fixed='true' name='Country wise count of cuisines' w='49288' x='710' y='10133'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='88516' id='50' is-fixed='true' name='Sheet 16' w='49292' x='49998' y='10133'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{D7FB47A2-C171-4430-93F7-53B90E88E658}' />
    </dashboard>
  </dashboards>
  <windows source-height='30'>
    <window class='worksheet' name='Q 1'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{9CF0E133-F35F-4079-A6A1-AFB0F4343609}' />
    </window>
    <window class='worksheet' name='Q 2'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{6C0E7578-B3B2-4E13-ABFD-4A3F954A1AF1}' />
    </window>
    <window class='worksheet' name='Q 3.1'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.0gyrh5s04co3pi1avdh6e0jx2uig].[none:City:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[Parameters].[Parameter 1]</field>
            <field>[federated.0gyrh5s04co3pi1avdh6e0jx2uig].[none:City:nk]</field>
            <field>[federated.0gyrh5s04co3pi1avdh6e0jx2uig].[none:RestaurantName:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{3DE55AFB-E9A4-48DA-9DA7-92DD60DD7AD3}' />
    </window>
    <window class='worksheet' name='Q 3.2'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0gyrh5s04co3pi1avdh6e0jx2uig].[none:Calculation_164944388468121603:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{7CEC3E94-BB94-4523-998F-645716E06F8A}' />
    </window>
    <window class='worksheet' name='Q 4'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='compact' param='[Parameters].[Parameter 2]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0gyrh5s04co3pi1avdh6e0jx2uig].[none:Calculation_164944388545413137:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{6C31BD3B-4238-4CE3-AD91-884AAB0EE8BE}' />
    </window>
    <window class='worksheet' name='Q 5'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0gyrh5s04co3pi1avdh6e0jx2uig].[none:Calculation_164944388608503827:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{E7DE34C8-5F30-4A5B-8DD7-DD348D248349}' />
    </window>
    <window class='worksheet' name='Q 6'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{06784DD5-4D06-432D-A0A3-327723838230}' />
    </window>
    <window class='worksheet' name='Q 7'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0gyrh5s04co3pi1avdh6e0jx2uig].[none:Has_Table_booking:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.0gyrh5s04co3pi1avdh6e0jx2uig].[none:Has_Online_delivery:nk]</field>
            <field>[federated.0gyrh5s04co3pi1avdh6e0jx2uig].[none:Has_Table_booking:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{0EE2E2F7-5623-44B1-A1B1-EE2D3144A266}' />
    </window>
    <window class='worksheet' name='Q 8'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0gyrh5s04co3pi1avdh6e0jx2uig].[none:Has_Online_delivery:nk]' type='color' />
            <card pane-specification-id='0' param='[federated.0gyrh5s04co3pi1avdh6e0jx2uig].[__tableau_internal_object_id__].[pcto:cnt:Main_C562EB1EF78848B78126FD66CCC15CBE:qk]' type='size' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.0gyrh5s04co3pi1avdh6e0jx2uig].[none:Has_Online_delivery:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{1BB55E44-2B63-4851-9567-F0294A3EACA5}' />
    </window>
    <window class='worksheet' name='Top 10 cities max voted'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0gyrh5s04co3pi1avdh6e0jx2uig].[none:City:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
      </viewpoint>
      <simple-id uuid='{D7B12A4D-83D3-4879-95C8-4CD553507B4E}' />
    </window>
    <window class='worksheet' name='top 5 costly restaurants'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.0gyrh5s04co3pi1avdh6e0jx2uig].[avg:Average_Cost_for_two:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
      </viewpoint>
      <simple-id uuid='{0F4F18F7-5006-42CD-992D-193CF758D594}' />
    </window>
    <window class='worksheet' name='Country wise count of cuisines'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0gyrh5s04co3pi1avdh6e0jx2uig].[cnt:Cuisines:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{4888F881-0942-4AC8-B62C-97576FFC2460}' />
    </window>
    <window class='worksheet' name='Count of restaurants each country'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{F13E144E-8108-45DE-84B9-AE8818DE4AFD}' />
    </window>
    <window class='worksheet' name='is delivering now'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.0gyrh5s04co3pi1avdh6e0jx2uig].[none:Is_delivering_now:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{A75AF339-BA41-415B-BF36-65E72B94D90C}' />
    </window>
    <window class='worksheet' name='Sheet 14'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.0gyrh5s04co3pi1avdh6e0jx2uig].[none:City:nk]</field>
            <field>[federated.0gyrh5s04co3pi1avdh6e0jx2uig].[none:Countryname:nk]</field>
            <field>[federated.0gyrh5s04co3pi1avdh6e0jx2uig].[none:Cuisines:nk]</field>
            <field>[federated.0gyrh5s04co3pi1avdh6e0jx2uig].[none:RestaurantName:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{4C9F330C-0C39-4702-BE27-E35E57C4666F}' />
    </window>
    <window class='dashboard' maximized='true' name='Dashboard 1'>
      <viewpoints>
        <viewpoint name='Q 4'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Q 7'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Q 8'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Sheet 14'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='is delivering now'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='59' />
      <simple-id uuid='{EB2A92C2-0D10-40CA-8B97-4EDF38BE1F45}' />
    </window>
    <window class='dashboard' name='Dashboard 2'>
      <viewpoints>
        <viewpoint name='Country wise count of cuisines'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Sheet 16'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='15' />
      <simple-id uuid='{2430961E-9E0F-46B2-B8CB-70D2EA21C5A2}' />
    </window>
    <window class='worksheet' name='Sheet 16'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.0gyrh5s04co3pi1avdh6e0jx2uig].[none:Calculation_164944388468121603:nk]</field>
            <field>[federated.0gyrh5s04co3pi1avdh6e0jx2uig].[none:Cuisines:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{000756C0-055E-4F6D-AA36-BD4E2CEB6F4A}' />
    </window>
    <window class='worksheet' name='Sheet 17'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{4898ACFC-97A1-4C78-8541-4D28014C5027}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Count of restaurants each country' width='192'>
      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
      +Ufs+DUyI5UAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Country wise count of cuisines' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Dashboard 1' width='192'>
      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
      SUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Dashboard 2' width='192'>
      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
      SUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Q 1' width='144'>
      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
    </thumbnail>
    <thumbnail height='192' name='Q 2' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Q 3.1' width='192'>
      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
      7B1dqOHoE22OQevxRAWwcvMeo2efw1naYGZzm/BK/Ek2x6AFebJRoBfPQzrHoVPnUba3CR7s
      bCghqFZrCAS55A6JTPF9aqyyHY4hHlEin0qQypceUUIhGo7wqOV4pZhmJ5F7RAnBTniLis7f
      S7kkK8srpAtl/U8KhVh4nfXNCDVV/06qpSwry8skMoUm96qSiIZZXQ9Trqm6JZRKgbWVFWK7
      mSZ1CNLxCCur6xSrim4JtVZic22VrVgS/W8R5FJxlpdXyJX1LaoqVbY31tiJN54ovF+DUIlt
      bbC2GaHaxB61Um7PHul8U3vsRrdYXdPa44kKwOrr56mj/chmK8ef/gJf+aOTDSXS/PPXf0I+
      G+Hb//QzfvoP32Q7X9+tCukYkzdvcefOHe7cucL3v/MW9Y9LZW3uHrfv3OHOnTu8+cNXubOc
      qCtRLaW5ff3m/Tpu8p//089plMj28iyT9+u49OavuHhlpe66ECVuX71+v467/OBv/7PmCOjq
      xVf5zuuTKChcee1b/PJ6uKFEiW/99X9gdbdAMRXmr//Df6JR8tE7b/GNH/wWBcH0Oz/iB2/O
      NJSo8uNvfJ2767tUCwn+7v/5BvFita5Eau0Of/PNH1FSFFYn3+Rbr15q6MAKb33v73lnehOl
      mud7f/8N5iPZuhKl1CZ/8/VvkipViS3f4O++/UvNoDH5i3/kZ1fmESj86p++wZX5+hleiAJ/
      +5d/RSRbZvbGW7x2pfFceZlv/99/xUo8Tym9xV//X/9RY4/YvXf42++/gYJg5vc/4ftvTGns
      8dP/+P8yuRanWtzl77/+DSK59/rQE9sJzvzl/0np9d9o/m4ZG8P/V395/39mbLYiN6+9i7f9
      GIHqHIqo17jIx5nZSPG5c4eRsGE3a9cRm4tT2A6cp7/NRq7NqxmtRKXAvYU1Pvfys8iUcNks
      mjpSGzMkvCc42uPCVIiQ1gxYEnfvTvHyf/HHmBB4HDZNHeWSisdjo1wqY/e4yGhmARXZ4kSu
      VahI4DBJNI69lYqKx+2gXCphdjpRS43zjAomOxYUyhVwWEyamUSpKThdDirlMpLVjlTTjs6q
      sGA3Q7lcxeGwUas1DCuqgs3uRKmUUSULFlHW2LVWk3F5TZRKZewuJ7VytbEEZqsLUS1jcZio
      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
      10okFiUS1UmXtzjwWcusrKyTTOwSz+ln2VorCS5en2JlfYv9XUh/3rK5OXLk2HsNlfWn2XR8
      G1fnMINiientPMERb13DDh48SGQ7ztj4YSJvvalbRyW5znZB5uhQiERWP015bnkDpyeAw6xQ
      UwSWxuaYrVhkiUIhj9WqN43C+soaS7EEvV4X7T19aPLdHG0MjR0lubOD3a8dUQG6uvs5bXUQ
      K9YYcepEIKoFNqJxnO1jSAUdN8pkpX94jIqljYBnGJfLpS1z3wV69qXnefut3wLaU3JqJc+9
      29cp1mQOnXuZNqe/7nomsc1WOMzc3BxtnYPY9BQv27DUdrlx8yah3mGGuurrsNicjI9P0NER
      oq+/D6dd535Ndp45/wzZQhm3U5v81zM0hjOyyvTyFgqyfnp3tcBmNI7HqhJNlRkO2BsKCJbW
      NnC29SFV9QdIIWo4PUHclirlir4713foNIFyFclkqXPHTV/72te+pteoheU1olsbbO3sLYQ7
      gtppxeFyszJ1g6WEyuljo/UJV4AQ4HNKrKxu4O8cpr3NralDtrvx2a1k8iWGhgZx2bSa9Dmd
      2GwqqsVPT0dAO2Ll1pmMWHlq1M31pThD3Vq3IR1PYLFASZjp7O7FaW1QkVIjGglj8XbS29mO
      zap94LlMEllSiaWKdHT14GzsWCYzLpcXuZKmrb2PoN9bd1lU8mSKCrs7EZK7SSxuP8799ysE
      igCvXTA3v0yof4ygTyuSyu4q09tlRvsCZISHgVB98pfd5cVttWKzKmzvFujp6sQkN7qNee7c
      uM5aNI3s9DPYVe82FvIZ1FqV7UiU3XSONr8fS6MLW8tz8dIkTpvKUjTPYHe7pq02l4/+/n7k
      bJi8rYuAs/5+a8i4XG04ZEHf8LDWpoDH7cVpUzE7gnS2a91K2erlwMER+geHGezw6s6qd29c
      Jzg4Spur3lXTdYEkq5uJg0MU4mESioNEVP/XXdLxLZbCMeRCgo2UNtMjsZsgly+iqoJqtckB
      kGqZja0YQqlQa7Icyexuky6olEpNDsQ4O3FXo0wvbdPfrf9irf7BXrp6hhgeHsWrs85AkvF4
      A1R213RzTgCSiQg3bi7R3gY7aZ37ESqRzXVU0D0AsptIE+ju4+TJkxzsCyKZGsReKzI/O0M4
      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
      AElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Q 4' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Q 5' width='192'>
      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
      u6hDJWYAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Q 6' width='192'>
      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
      AABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Q 7' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Q 8' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Sheet 14' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAT2UlEQVR4nO3de3hU5Z3A8e+ZmTP3yWRyJTeBcJOrEltAboJUfVpd20rt1ku19XlcrbV9
      tlX79La7+Fi1a2u7rau22lJd2916oYoEBQXlItcAIRjCLQkkBHIbksxM5npmztk/QhMRBaWV
      TJ/z+zwPzzPznpnz5g++c05OkvMqhmEYCGFSluH+AoQYThKAMDXbe5/cfffdVFVVDdfXIsR5
      d0oAVVVV3HbbbcP1tQhx3skpkDA1CUCYmgQgTE0CEKYmAQhTkwCEqUkAwtQkAGFqEoAwNQlA
      mJoEIExNAhCmJgEIU5MAhKlJAMLUbGd/iRDDb/BP1xUFDGPg318pCoqinNN+5Qggsp62ZwO9
      d36Vrut/eHIgRUfFKLoWLKJrwSJSHZlz3rcEILKekVHx3Pk1LNrJT30DrFfeTtGGtyne8DaO
      knM/kZEARNazT78UdWTRe0YypDa8RPe1X6LvV3/C0M/9zj4SgPjHY3dRunsTBUsfw9j5R/rf
      PHjOu5IARNYzEjGMaBwjo2FEYxDrRGs7ARYLKBYU1XrO+5arQCLr9T98H/FtRwAI3noXgV88
      ROzXS9DaQjiu+TqeBWPOed8SgMh6vvsfx/e+scCTf/i77FtOgYSpSQDC1CQAcV5l0in6envp
      7e0lntQGxw09TSKROuW1yWiQwy3dg9vDfX2nvOdD59CSpNL64HM9rZH4kPfJ9wDivNJiIWpW
      vUBNqJAbv3AF6WAzcXsROelDPLNsL1+7/UZCbQcxfKWM9PdzsMlg9MgCNq3+CyFrISMrx1Hu
      y3A8qlKRayFhyyUdCmKxpOjoDuHIHcGJncvYFqnkn6+cSjKeIJVMEFVyGBMw2N8WpuriyRyq
      20Ymp0ICEOeXM6eQGVWT6Om6AH+ihTVtGnnxd0hNqKSiYgyFXpU+i42tb60g56r5DJykRDnQ
      pnHb7QtRUmGefX4V+fYUnX4XVMymv24zdrUH37Tr2LnxTeaPLqKybCLhphrWHvPy5RmFNB/r
      ZPf6nZQW+3g7eoLGvW3MWVgsAYjhYxg6FquK1QJWuwurVSHSeYg9B9pJJJNkBn/C68JrjdAW
      jODR+zBQsCpgsVpJJKL0haOMKLSQV1CE02HD5fZASkGx2JkydSpOtRuMFLFYlEDpxeTnF1Po
      97Nl/TsSgDj/XCWTmBVwEygcxeS+GmKOWUyrvABLT4ios4wxZRGmV11LcXEBHq8CWFl8441s
      3ryN0gnTuXZRFW39di6s8LF127vMXLQAnyODxwvOmbMoKSukYEMNnvFTmOjLxWVzcrFLYdaY
      AnYdaGPchDyCxw8z5zOLUN67RNLSpUvl9ujCVOQqkDA1CUCYmgQgTE0CEKYmAQhTkwCEqUkA
      wtQkAGFqEoAwNQlAmJoEIExNAhCmJgEIU5MAhKlJAMLUJABhahKAMDUJQJiaBCBMTQIQ2csw
      yBw9iNbWc8pw5vB+tMPtg8/1nnZSB1rOaQoJQGQpjcjD3yN441eJVtcNjhqRDnq/9yPCL7wN
      QPyFXxO8+VZCj714TrPIbVFElrLg+vq9qCOLSESGRmPPPYn9um+jtR4DwD7/evImTqRvad2H
      7OdsswiRlazYSopPGck0biLR7MX7hVlDrxpRAue2QCQgRwDxD0Mn9uzTJN/cT9eWFaSPnyB2
      2aW4Z43+m/YqAYjslIoQf2sjqZ0NaHGN+IYcfA88g+8BMJJJev5rGe4Z5SQ3rEWr20qm6TCx
      19fh/Mw8LB9jySQ5BRLZKaORaW5CKZmCo9JB+ujQVR9sNtwLpwM6maMt6Ak3rnmTSTe1nLqA
      9kcgRwCRnVx5eO/61gduUqxWXDMmAuC+6W+7laccAYSpSQDC1CQAMawON+xg9erVvLl2I9H0
      0HhnWwuR9y1rtG3zOuKajmHo7Nm+kR17m2k9eJBYMkpjSzuQ5MD+wx9rfglADKuKcdOIdTRz
      4fQZRI7uY/ny5TQc6aD6/55mWfVbtLU28uorL7O78TjB7g4yukE62k7IO5rRJQH6QiG6mmp5
      8qk/sPdwB6FQL8GWfbzyygqajnezbf0brHprE3FN/8D5JQAxrGyqHdVmxe6wsmXLLi67fC7b
      12+icvwU5syfg93QMLQIGzcN/aRX6z7CtIll5OcFaGtpIbekgglTL2Hy6EKOHGllZfUrpLRe
      1q7ZQlNzC5kzXBmSq0AiS1jI99vZ/M4WPIXF5DqC7KndgxLch7+kHNfxoVfaSyfz8iurGX1B
      xcCA6ibd08rh9oFfmrugYhQpXxmTSkqJ9fip39vAiapLKA+4TptVVogRwy4Zj2FzulEyGqFI
      Px6fHxtpwv1xXC478YSGw+HEgo7qcKAA0XAI3ebAYVVQHQ4S/WFQnVgwsKtWQqEITo8PPRUj
      jY0crxtFOf13JuQIIIadw+UeeGBTCQQCJ0ft5ObaB7Y7Tv/k9vpzT3nu9vlPeR7Iyzu581PH
      30++BxCmJgEIU5MAhKlJAMLUJABhahKAMDUJQJiaBCBMTQIQpiYBCFOTAISpSQDC1CQAYWoS
      gDA1CUCYmgQgTE0CEKYmAQhTkwCEqUkAImtkmnYS/NK1dMxbSGjpSgx96HYmRryP7gXT6Ji7
      gM7LrwAg9tgPab9kNp3zFnDi/icBncSqFwguvprwX2o/0pzyR/EiS2To/9kvcd37S9yTfQQX
      34J21TzsZTkAGIlOjMBcil96AuXk3c+1I+34f/ci7ullJ/eRRA8rOKaNQ09oHzzN+8gRQGQJ
      AyOZHvgf6Q7gmOwh1dI3tLX9CNreGnpuv5Pw718CdNJN9fQ/9EN6fvATUk0dgAP3l6/HVpT7
      IXOcTo4AIkvY8N7zDXruu5N+wwW9x/DeNPT5bBkzl6LX/gxanOijS0jftJjcJ5ahxzQydWvp
      +c79FL/65MdeLUkCEFlDKRpLwbKVEDnKiTt+hGNsAZnmvWRSfiy2HgxrEeqoMqzl+RiJftLN
      ndhnVKEkxkFiMwYff7kwCUBkDb1xF733Pwb2PLw/vh+r30b43x7EdsODOAsSRH7yXdKHu7DN
      /ixen4XkttcIL/k++EvxP7wES88hur5yF3o4CspatJ2fp+DRe884p9waUWQtI3yM0G9X4L/n
      DhTL37AU5BnIEUBkLSWnjNz77vxE55CrQMLUJADxiUr0HmNl9QpWrKjm4NHg4Hgm3kdTW9cp
      rw211rGjqRsMg/qaDVS/tpq2YOT9uwSgvfUw4Y94rf80hk7zoUbSupwCiU+YI7eUi0YfYM+J
      cioLVN5YuZy0ewTjPd38bnUjt9+6mJaGPUTI4dJRBn3JfMCg/t1Grlp8Lc+/sILPX3ER2+sa
      mVg1mxOHttOT9NBe/ybqmMu4vGoUtbXvUj7502hdR5k8eRxNnWHCbU3o9gDlI+zsebeZKTNm
      c6R+B4lUinETJvHc0j+wYPFNcgQQnyxFUbAoCoqicHTPZlyjZ+HpqieZW8mkqhmMHuEnk9Fp
      eGcLfe95X7SvnRWvVlMwspINr79GOBZl/ZbtHG05SsaAynFTmTN/9sAKMukom7fW0XTwIIlY
      mKPtnezZ8y4Tqy5C0TTS/Z1sqTvAkWO9fHraSFpPaEyZOJHZVRMkAHH+BErKaN79Do1hG6UF
      Pvpa9nOwfgf1x+MU+L28dyEjT6CEGVWTSITDlFwwEp+/kJnTx1F+wXi6G/cQyHFSW1PLpi1b
      cQbycdpsOK1JanbVkdDAm1OI32tl25YdBAoKsVnAalWxWi0oioLTkqB2T6NcBhWfPD2jkTEs
      qFYLiXgMw2rHZbeRiMewqHa0ZAqrzYaqWtGxoFoUUqkUqt1OMpnErtqIxRPYHU70dIqMYcHl
      sBFPpLDbraS0DDabioUMWtpAVVUMXUd12EknE2gZA5uqYhg6qs1KRgdFT5PKGPI9gPjkWazq
      4KmG0+0ZHP/rY7uqDo6d/D037A7HwGucTgC8Xu/ABnXov6zHM/B46O0qqv3UuVWHE/XUISyW
      gZlsyFUgYXISgDA1CUCYmgQgTE0CEKYmAQhTkwCEqUkAwtQkAGFqEoAwNQlAmJoEIExNAhCm
      JgEIU5MAhKlJAMLUJABhahKAMDUJQJia/E2wyBpGPETsuaWkmkO4b7sD+/iSwbs9G1qc/kcf
      IN2RAJuNwM8fAUA/0UT4wSdw3vE9nOPySG1aS+y1t1GKxuG97SasftcZ55QjgMgSOrH/vp9k
      bwDXgin0fvNbZMLJoc3xbuLr6nHfcBOeG74CgKGn6P/pI2it9WgtPRg9zUSWb8HxuS9iTTQQ
      eqr6rLNKACJLZEhtPYbnlutwXrUY90QbyUNDt1I0elrQU7nokQhKcQUA6c0rSPs/jfvSyoEX
      5Y8n72dLcM79FIrLjuJxn3VWCUBkCRvOL36Kvru/Rd9/LCFeU4+RzAxtdhbhWjCe5IY19Nz8
      ZTL9XYQeX4b7mvnovRH0rnZIGxg9bYS+cweJE2XkfO3KjzCrEFlBwXXTd7FNrSUTTZNpbECt
      yBnaml9Jzr//GAWIP/MTUgfbsLjs9D/6EJl9OzFqDdyLLiJyz7+i3nAf/mtmoXyEJQUkAJE1
      kq//iciyTRDrwTL1auxlfvofvIvM6JtxFTfR9/QarF6VdGs3Rbf+GNfSZwCI/uIb6FO+jeVE
      DfEdTRjeZ+mtfhbbvGvIufnqM84pAYisYV/0JfzjZoLVjW1UOaT6SHV68N8zE4tjFvmTFqD3
      xbCUlJ/y6e669d8xHHlYrGUULf9f/nqTUSW38KxzSgAiaygON+q4CYPPDWz47vsuVufADROt
      JRVYS05/nyX/r4MO1ImTPtacEoDIWorTh1rh+0TnkKtAIqvpus57bmD+dycBiPNu/66N/P6p
      3/Dq6+uIpYfGd2/dRE/81GWPXn75edI6GBmNbW+/zquvr6Evljq5VaehoQFdHwrkQP1ePs7C
      SXIKJM67C6vm0lC/n3kLL2PfO6/R2BmiYOQU9q+tZl8wxYyxedTt3oNn9IzB94Ra6zicLOT6
      Ky8m2PAWXHAhy+tC2KOH8Rn9rKltYtolc+g6coR06CA17U5S0X4WTS9l+/428krHk2mvJ+Eq
      YuHChQQ8A/dRlyOAGEYpGtsiLL7us7Ttb2T02MnMu+xSYr1BFJvBkaZjg69Mp+KoLi9Wqw1D
      S4CuEY0niUajuHPz8KkKvaEQ0WgULRljfNV8CpwGm2t2YrXbiYR6GVFSTCLcR0wb+gGbBCCG
      RW5+AVbFzuSxBSz7yyrGXnIRYyvL2LZxG119IRyeXIryfQRy81AUyKv8FM7uXbxcvZp0TgWr
      NtXhdTsJBPJIJOJYVTu6niGQF8Dly8PjsJCbF2Du7JloKYOSEYUk0joWBTLvOWWSJZKEqckR
      QJiaBCBMTQIQpiYBCFOTAISpSQDC1CQAYWoSgDA1CUCYmgQgTE0CEKYmAQhTkwCEqUkAwtQk
      AGFqEoAwNQlAmJoEIExNAhCmJgGI7GAY6N3HSHf0nbZJDx4jub2G5PYaUodaAQM9eJzUrt1k
      IgkAMu2tJGv3YmT0gd3Fw6R27iITjp9xWglAZIE00SceoPv66wk/t+G0rfFnf0rokd8Q+/Pz
      JN6pxdA0gjfcSuSpJwne/E0yiQzJP/6a4HU3kzwcAkB7+wWCi28hvrP1jDPLjbFEFlBwXPN1
      bBWFxA6cvjXd3I9vyYO4ppQCYPTsw/6V75N720IiP7iF2PpGrKi4rruCxJqtOMdcRWLLfpxX
      zjrrzHIEEFnAim1kxYduNfQwoX+5gY7PXE3kxfXonUexTZoAigV1/AQyLR0A2GZeTnrXevRU
      hHTEhlroPevMEoDIcgb+J15ixKZ1FP3xP4k99nN0aw56dw8YBpneHpScgbXAFGcJaiBMcsMb
      WMbPR7GefYkYCUAMv3SC5LbNaPWNpJsbSOyoR2/fR9/Dj2OQIPLQA8TeeIt49UooGoelYjKx
      3z5CbOUr9L9ah2vR1MFdOS+dSmjJ0zj/aeFHmlq+BxDDLx0ntXEdmZgHNT9GYnMt9hvmYC3K
      Bxy4PruA2OvrwVdK/m/uwuL0Erj3ehIbG/D/6inUAgfMWoi1oBi16HO4jzpxlLuwzL8CRuaf
      cWq5NaIwNTkFEqYmAQhTkwDEsDrWtJfNmzezddsu4u9ZF/tEZzvRVPqU1+6q2URC00n0DVz2
      DAWPE4oPvSYe6iIYTnys+SUAMawCxeW01G8nt3QU/e1NVFdX03gsyCv/8zgvrljL8bZmVixf
      TkNLN+3Hj5LWDZR0D61RnY1vrCbc38Oq6lfZte8wNaue5+k/Lae9q5M3X1tB7f5Wjh7cTfXK
      N+iOfHAYEoAYVm6vH5/HTSDPz6YNW5k9byYb16yncvwU5syfg4MMhhZi7bodg++x+MdRu72W
      PiWfpo1vMX7uIvZtWk/hmFFccuk8grVvsLcjRvXyFex5dzcJ/cMX2ZMARJZQyPHaeLeuHnde
      Pj63g0MHDrFu/Qbyyypw24b+q1otCu1bX2LEpIsoKsihYfduNIePXK+ftuYDWLx5jCgu5dqr
      FzH2wun40l00NHV98KxyGVQMt/5wH05vLko6TnvXCfKLRqCi0dkdItfvItSfwOP2YbWkcbt9
      WBToCXbhzi3AYTPoONaOJ1CEz2Wlvb2TQGER4e4OFJcfjy1NTzjJiJJiVOvpn/fygzAx7Lw5
      uQMP7C7Ky8tPjtooK3MB4PH6T3tPXmHx4OOS8qHfIyotKwPAVTY05sn58LnlFEiYmgQgTE0C
      EKYmAQhTkwCEqUkAwtQkAGFqEoAwNQlAmJoEIExNAhCmJgEIU5MAhKlJAMLUJABhahKAMDUJ
      QJiaBCBM7f8BI4Ngk1v0J/4AAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Sheet 16' width='192'>
      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
      ilPng+ey/w/CmxqQdHZ1PQAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Sheet 17' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAACFUlEQVR4nO3TMQEAIAzAMMC/5yFjRxMFfXpnZg5Eve0A2GQA0gxAmgFIMwBpBiDNAKQZ
      gDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFI
      MwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQD
      kGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBp
      BiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA
      0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDN
      AKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxA
      mgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZ
      gDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFI
      MwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKR9Y+0F
      fBUOM1sAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Top 10 cities max voted' width='192'>
      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
      LZBgav8PtoqvpgpE+gIAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='is delivering now' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='top 5 costly restaurants' width='192'>
      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
      RK5CYII=
    </thumbnail>
  </thumbnails>
</workbook>
